; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S --passes=loop-vectorize,instcombine,simplifycfg -riscv-v-vector-bits-min=64 < %s -o - \
; RUN:    -vectorizer-use-vp-strided-load-store=false \
; RUN:    | FileCheck --check-prefix=GATHER %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S --passes=loop-vectorize,instcombine,simplifycfg -riscv-v-vector-bits-min=64 < %s -o - \
; RUN:    -interleave-no-scalar-epilogue=true \
; RUN:    -vectorizer-use-vp-strided-load-store=false \
; RUN:    | FileCheck --check-prefix=GATHER-INTERLEAVE %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S --passes=loop-vectorize,instcombine,simplifycfg -riscv-v-vector-bits-min=64 < %s -o - \
; RUN:    | FileCheck --check-prefix=STRIDED %s
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi \
; RUN:    -scalable-vectorization=only -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -interleave-no-scalar-epilogue=true \
; RUN:    -S --passes=loop-vectorize,instcombine,simplifycfg -riscv-v-vector-bits-min=64 < %s -o - \
; RUN:    | FileCheck --check-prefix=STRIDED-INTERLEAVE %s

; Test from https://reviews.llvm.org/D107790
;
;struct foo {
;  int a, b, c, d;
;};
;
;void struct_gather(int * __restrict  A, struct foo * __restrict B) {
;  for (int i = 0; i < 1024; ++i)
;      A[i] += B[i].b;
;}

%struct.foo = type { i32, i32, i32, i32 }

define dso_local void @struct_gather(i32* noalias nocapture %A, %struct.foo* noalias nocapture readonly %B) {
; GATHER-LABEL: @struct_gather(
; GATHER-NEXT:  entry:
; GATHER-NEXT:    [[TMP0:%.*]] = call i64 @llvm.vscale.i64()
; GATHER-NEXT:    [[TMP1:%.*]] = shl i64 [[TMP0]], 1
; GATHER-NEXT:    [[TMP2:%.*]] = icmp ugt i64 [[TMP1]], -1025
; GATHER-NEXT:    br i1 [[TMP2]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; GATHER:       vector.ph:
; GATHER-NEXT:    [[TMP3:%.*]] = call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; GATHER-NEXT:    br label [[VECTOR_BODY:%.*]]
; GATHER:       vector.body:
; GATHER-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-NEXT:    [[VEC_IND:%.*]] = phi <vscale x 2 x i64> [ [[TMP3]], [[VECTOR_PH]] ], [ [[VEC_IND_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-NEXT:    [[TMP4:%.*]] = sub i64 1024, [[INDEX]]
; GATHER-NEXT:    [[TMP5:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP4]], i64 2, i64 0)
; GATHER-NEXT:    [[TMP6:%.*]] = trunc i64 [[TMP5]] to i32
; GATHER-NEXT:    [[TMP7:%.*]] = and i64 [[TMP5]], 4294967295
; GATHER-NEXT:    [[DOTSPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP7]], i64 0
; GATHER-NEXT:    [[DOTSPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-NEXT:    [[TMP8:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[VEC_IND]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP9:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP8]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B:%.*]], i64 0
; GATHER-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-NEXT:    [[TMP10:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP11:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP10]], <vscale x 2 x i64> [[TMP9]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP12:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP11]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[VP_GATHER:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP12]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP13:%.*]] = getelementptr inbounds i32, i32* [[A:%.*]], i64 [[INDEX]]
; GATHER-NEXT:    [[TMP14:%.*]] = bitcast i32* [[TMP13]] to <vscale x 2 x i32>*
; GATHER-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP14]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[VP_OP:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> [[VP_GATHER]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP15:%.*]] = bitcast i32* [[TMP13]] to <vscale x 2 x i32>*
; GATHER-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP]], <vscale x 2 x i32>* [[TMP15]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-NEXT:    [[TMP16:%.*]] = and i64 [[TMP5]], 4294967295
; GATHER-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP16]]
; GATHER-NEXT:    [[VEC_IND_NEXT]] = add <vscale x 2 x i64> [[VEC_IND]], [[DOTSPLAT2]]
; GATHER-NEXT:    [[TMP17:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; GATHER-NEXT:    br i1 [[TMP17]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; GATHER:       for.cond.cleanup:
; GATHER-NEXT:    ret void
; GATHER:       for.body:
; GATHER-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_BODY]] ], [ 0, [[ENTRY:%.*]] ]
; GATHER-NEXT:    [[B_2:%.*]] = getelementptr inbounds [[STRUCT_FOO:%.*]], %struct.foo* [[B]], i64 [[INDVARS_IV]], i32 1
; GATHER-NEXT:    [[TMP18:%.*]] = load i32, i32* [[B_2]], align 4
; GATHER-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds i32, i32* [[A]], i64 [[INDVARS_IV]]
; GATHER-NEXT:    [[TMP19:%.*]] = load i32, i32* [[ARRAYIDX2]], align 4
; GATHER-NEXT:    [[ADD:%.*]] = add nsw i32 [[TMP19]], [[TMP18]]
; GATHER-NEXT:    store i32 [[ADD]], i32* [[ARRAYIDX2]], align 4
; GATHER-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; GATHER-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], 1024
; GATHER-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP2:![0-9]+]]
;
; GATHER-INTERLEAVE-LABEL: @struct_gather(
; GATHER-INTERLEAVE-NEXT:  entry:
; GATHER-INTERLEAVE-NEXT:    [[TMP0:%.*]] = call i64 @llvm.vscale.i64()
; GATHER-INTERLEAVE-NEXT:    [[TMP1:%.*]] = shl i64 [[TMP0]], 4
; GATHER-INTERLEAVE-NEXT:    [[TMP2:%.*]] = icmp ugt i64 [[TMP1]], -1025
; GATHER-INTERLEAVE-NEXT:    br i1 [[TMP2]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; GATHER-INTERLEAVE:       vector.ph:
; GATHER-INTERLEAVE-NEXT:    [[TMP3:%.*]] = call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; GATHER-INTERLEAVE-NEXT:    br label [[VECTOR_BODY:%.*]]
; GATHER-INTERLEAVE:       vector.body:
; GATHER-INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-INTERLEAVE-NEXT:    [[VEC_IND:%.*]] = phi <vscale x 2 x i64> [ [[TMP3]], [[VECTOR_PH]] ], [ [[VEC_IND_NEXT:%.*]], [[VECTOR_BODY]] ]
; GATHER-INTERLEAVE-NEXT:    [[TMP4:%.*]] = sub i64 1024, [[INDEX]]
; GATHER-INTERLEAVE-NEXT:    [[TMP5:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP4]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP6:%.*]] = trunc i64 [[TMP5]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP7:%.*]] = sub i64 [[TMP4]], [[TMP5]]
; GATHER-INTERLEAVE-NEXT:    [[TMP8:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP7]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP9:%.*]] = trunc i64 [[TMP8]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP10:%.*]] = sub i64 [[TMP7]], [[TMP8]]
; GATHER-INTERLEAVE-NEXT:    [[TMP11:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP10]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP12:%.*]] = trunc i64 [[TMP11]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP13:%.*]] = sub i64 [[TMP10]], [[TMP11]]
; GATHER-INTERLEAVE-NEXT:    [[TMP14:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP13]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP15:%.*]] = trunc i64 [[TMP14]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP16:%.*]] = sub i64 [[TMP13]], [[TMP14]]
; GATHER-INTERLEAVE-NEXT:    [[TMP17:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP16]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP18:%.*]] = trunc i64 [[TMP17]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP19:%.*]] = sub i64 [[TMP16]], [[TMP17]]
; GATHER-INTERLEAVE-NEXT:    [[TMP20:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP19]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP21:%.*]] = trunc i64 [[TMP20]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP22:%.*]] = sub i64 [[TMP19]], [[TMP20]]
; GATHER-INTERLEAVE-NEXT:    [[TMP23:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP22]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP24:%.*]] = trunc i64 [[TMP23]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP25:%.*]] = sub i64 [[TMP22]], [[TMP23]]
; GATHER-INTERLEAVE-NEXT:    [[TMP26:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP25]], i64 2, i64 0)
; GATHER-INTERLEAVE-NEXT:    [[TMP27:%.*]] = trunc i64 [[TMP26]] to i32
; GATHER-INTERLEAVE-NEXT:    [[TMP28:%.*]] = and i64 [[TMP5]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP28]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD:%.*]] = add <vscale x 2 x i64> [[VEC_IND]], [[DOTSPLAT2]]
; GATHER-INTERLEAVE-NEXT:    [[TMP29:%.*]] = and i64 [[TMP8]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT3:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP29]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT4:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT3]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD5:%.*]] = add <vscale x 2 x i64> [[STEP_ADD]], [[DOTSPLAT4]]
; GATHER-INTERLEAVE-NEXT:    [[TMP30:%.*]] = and i64 [[TMP11]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT6:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP30]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT7:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT6]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD8:%.*]] = add <vscale x 2 x i64> [[STEP_ADD5]], [[DOTSPLAT7]]
; GATHER-INTERLEAVE-NEXT:    [[TMP31:%.*]] = and i64 [[TMP14]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT9:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP31]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT10:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT9]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD11:%.*]] = add <vscale x 2 x i64> [[STEP_ADD8]], [[DOTSPLAT10]]
; GATHER-INTERLEAVE-NEXT:    [[TMP32:%.*]] = and i64 [[TMP17]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT12:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP32]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT13:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT12]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD14:%.*]] = add <vscale x 2 x i64> [[STEP_ADD11]], [[DOTSPLAT13]]
; GATHER-INTERLEAVE-NEXT:    [[TMP33:%.*]] = and i64 [[TMP20]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT15:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP33]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT16:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT15]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD17:%.*]] = add <vscale x 2 x i64> [[STEP_ADD14]], [[DOTSPLAT16]]
; GATHER-INTERLEAVE-NEXT:    [[TMP34:%.*]] = and i64 [[TMP23]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT18:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP34]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT19:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT18]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[STEP_ADD20:%.*]] = add <vscale x 2 x i64> [[STEP_ADD17]], [[DOTSPLAT19]]
; GATHER-INTERLEAVE-NEXT:    [[TMP35:%.*]] = and i64 [[TMP26]], 4294967295
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT21:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP35]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT22:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT21]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP36:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[VEC_IND]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP37:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP36]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B:%.*]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP38:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP39:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP38]], <vscale x 2 x i64> [[TMP37]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP40:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP39]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP41:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP42:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP41]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT53:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT54:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT53]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP43:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT54]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP44:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP43]], <vscale x 2 x i64> [[TMP42]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP45:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP44]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP46:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD5]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP47:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP46]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT55:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT56:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT55]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP48:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT56]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP49:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP48]], <vscale x 2 x i64> [[TMP47]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP50:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP49]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP51:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD8]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP52:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP51]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT57:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT58:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT57]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP53:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT58]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP54:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP53]], <vscale x 2 x i64> [[TMP52]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP55:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP54]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP56:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD11]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP57:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP56]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT59:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT60:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT59]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP58:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT60]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP59:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP58]], <vscale x 2 x i64> [[TMP57]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP60:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP59]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP61:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD14]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP62:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP61]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT61:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT62:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT61]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP63:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT62]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP64:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP63]], <vscale x 2 x i64> [[TMP62]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP65:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP64]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP66:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD17]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP67:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP66]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT63:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT64:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT63]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP68:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT64]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP69:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP68]], <vscale x 2 x i64> [[TMP67]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP70:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP69]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP71:%.*]] = call <vscale x 2 x i64> @llvm.vp.shl.nxv2i64(<vscale x 2 x i64> [[STEP_ADD20]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP72:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP71]], <vscale x 2 x i64> shufflevector (<vscale x 2 x i64> insertelement (<vscale x 2 x i64> poison, i64 4, i32 0), <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLATINSERT65:%.*]] = insertelement <vscale x 2 x %struct.foo*> poison, %struct.foo* [[B]], i64 0
; GATHER-INTERLEAVE-NEXT:    [[DOTSPLAT66:%.*]] = shufflevector <vscale x 2 x %struct.foo*> [[DOTSPLATINSERT65]], <vscale x 2 x %struct.foo*> poison, <vscale x 2 x i32> zeroinitializer
; GATHER-INTERLEAVE-NEXT:    [[TMP73:%.*]] = call <vscale x 2 x i64> @llvm.vp.ptrtoint.nxv2i64.nxv2p0s_struct.foos(<vscale x 2 x %struct.foo*> [[DOTSPLAT66]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP74:%.*]] = call <vscale x 2 x i64> @llvm.vp.add.nxv2i64(<vscale x 2 x i64> [[TMP73]], <vscale x 2 x i64> [[TMP72]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP75:%.*]] = call <vscale x 2 x i32*> @llvm.vp.inttoptr.nxv2p0i32.nxv2i64(<vscale x 2 x i64> [[TMP74]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP40]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER24:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP45]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER25:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP50]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER26:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP55]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER27:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP60]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER28:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP65]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER29:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP70]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[VP_GATHER30:%.*]] = call <vscale x 2 x i32> @llvm.vp.gather.nxv2i32.nxv2p0i32(<vscale x 2 x i32*> [[TMP75]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP76:%.*]] = getelementptr inbounds i32, i32* [[A:%.*]], i64 [[INDEX]]
; GATHER-INTERLEAVE-NEXT:    [[TMP77:%.*]] = bitcast i32* [[TMP76]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP77]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP78:%.*]] = sext i32 [[TMP6]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP79:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP78]]
; GATHER-INTERLEAVE-NEXT:    [[TMP80:%.*]] = bitcast i32* [[TMP79]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD31:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP80]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP82:%.*]] = sext i32 [[TMP81]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP83:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP82]]
; GATHER-INTERLEAVE-NEXT:    [[TMP84:%.*]] = bitcast i32* [[TMP83]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD32:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP84]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP86:%.*]] = add i32 [[TMP85]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP87:%.*]] = sext i32 [[TMP86]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP88:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP87]]
; GATHER-INTERLEAVE-NEXT:    [[TMP89:%.*]] = bitcast i32* [[TMP88]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD33:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP89]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP90:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP91:%.*]] = add i32 [[TMP90]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP92:%.*]] = add i32 [[TMP91]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP93:%.*]] = sext i32 [[TMP92]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP94:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP93]]
; GATHER-INTERLEAVE-NEXT:    [[TMP95:%.*]] = bitcast i32* [[TMP94]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD34:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP95]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP96:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP97:%.*]] = add i32 [[TMP96]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP98:%.*]] = add i32 [[TMP97]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP99:%.*]] = add i32 [[TMP98]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP100:%.*]] = sext i32 [[TMP99]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP101:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP100]]
; GATHER-INTERLEAVE-NEXT:    [[TMP102:%.*]] = bitcast i32* [[TMP101]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD35:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP102]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP103:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP104:%.*]] = add i32 [[TMP103]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP105:%.*]] = add i32 [[TMP104]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP106:%.*]] = add i32 [[TMP105]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP107:%.*]] = add i32 [[TMP106]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP108:%.*]] = sext i32 [[TMP107]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP109:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP108]]
; GATHER-INTERLEAVE-NEXT:    [[TMP110:%.*]] = bitcast i32* [[TMP109]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD36:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP110]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP111:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP112:%.*]] = add i32 [[TMP111]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP113:%.*]] = add i32 [[TMP112]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP114:%.*]] = add i32 [[TMP113]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP115:%.*]] = add i32 [[TMP114]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP116:%.*]] = add i32 [[TMP115]], [[TMP24]]
; GATHER-INTERLEAVE-NEXT:    [[TMP117:%.*]] = sext i32 [[TMP116]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP118:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP117]]
; GATHER-INTERLEAVE-NEXT:    [[TMP119:%.*]] = bitcast i32* [[TMP118]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    [[VP_OP_LOAD37:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP119]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> [[VP_GATHER]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP38:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD31]], <vscale x 2 x i32> [[VP_GATHER24]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP39:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD32]], <vscale x 2 x i32> [[VP_GATHER25]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP40:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD33]], <vscale x 2 x i32> [[VP_GATHER26]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP41:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD34]], <vscale x 2 x i32> [[VP_GATHER27]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP42:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD35]], <vscale x 2 x i32> [[VP_GATHER28]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP43:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD36]], <vscale x 2 x i32> [[VP_GATHER29]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[VP_OP44:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD37]], <vscale x 2 x i32> [[VP_GATHER30]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP120:%.*]] = bitcast i32* [[TMP76]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP]], <vscale x 2 x i32>* [[TMP120]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP6]])
; GATHER-INTERLEAVE-NEXT:    [[TMP121:%.*]] = sext i32 [[TMP6]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP122:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP121]]
; GATHER-INTERLEAVE-NEXT:    [[TMP123:%.*]] = bitcast i32* [[TMP122]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP38]], <vscale x 2 x i32>* [[TMP123]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP9]])
; GATHER-INTERLEAVE-NEXT:    [[TMP124:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP125:%.*]] = sext i32 [[TMP124]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP126:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP125]]
; GATHER-INTERLEAVE-NEXT:    [[TMP127:%.*]] = bitcast i32* [[TMP126]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP39]], <vscale x 2 x i32>* [[TMP127]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP12]])
; GATHER-INTERLEAVE-NEXT:    [[TMP128:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP129:%.*]] = add i32 [[TMP128]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP130:%.*]] = sext i32 [[TMP129]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP131:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP130]]
; GATHER-INTERLEAVE-NEXT:    [[TMP132:%.*]] = bitcast i32* [[TMP131]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP40]], <vscale x 2 x i32>* [[TMP132]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP15]])
; GATHER-INTERLEAVE-NEXT:    [[TMP133:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP134:%.*]] = add i32 [[TMP133]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP135:%.*]] = add i32 [[TMP134]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP136:%.*]] = sext i32 [[TMP135]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP137:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP136]]
; GATHER-INTERLEAVE-NEXT:    [[TMP138:%.*]] = bitcast i32* [[TMP137]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP41]], <vscale x 2 x i32>* [[TMP138]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP18]])
; GATHER-INTERLEAVE-NEXT:    [[TMP139:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP140:%.*]] = add i32 [[TMP139]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP141:%.*]] = add i32 [[TMP140]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP142:%.*]] = add i32 [[TMP141]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP143:%.*]] = sext i32 [[TMP142]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP144:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP143]]
; GATHER-INTERLEAVE-NEXT:    [[TMP145:%.*]] = bitcast i32* [[TMP144]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP42]], <vscale x 2 x i32>* [[TMP145]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP21]])
; GATHER-INTERLEAVE-NEXT:    [[TMP146:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP147:%.*]] = add i32 [[TMP146]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP148:%.*]] = add i32 [[TMP147]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP149:%.*]] = add i32 [[TMP148]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP150:%.*]] = add i32 [[TMP149]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP151:%.*]] = sext i32 [[TMP150]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP152:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP151]]
; GATHER-INTERLEAVE-NEXT:    [[TMP153:%.*]] = bitcast i32* [[TMP152]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP43]], <vscale x 2 x i32>* [[TMP153]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP24]])
; GATHER-INTERLEAVE-NEXT:    [[TMP154:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP155:%.*]] = add i32 [[TMP154]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP156:%.*]] = add i32 [[TMP155]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP157:%.*]] = add i32 [[TMP156]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP158:%.*]] = add i32 [[TMP157]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP159:%.*]] = add i32 [[TMP158]], [[TMP24]]
; GATHER-INTERLEAVE-NEXT:    [[TMP160:%.*]] = sext i32 [[TMP159]] to i64
; GATHER-INTERLEAVE-NEXT:    [[TMP161:%.*]] = getelementptr inbounds i32, i32* [[TMP76]], i64 [[TMP160]]
; GATHER-INTERLEAVE-NEXT:    [[TMP162:%.*]] = bitcast i32* [[TMP161]] to <vscale x 2 x i32>*
; GATHER-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP44]], <vscale x 2 x i32>* [[TMP162]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP27]])
; GATHER-INTERLEAVE-NEXT:    [[TMP163:%.*]] = add i32 [[TMP6]], [[TMP9]]
; GATHER-INTERLEAVE-NEXT:    [[TMP164:%.*]] = add i32 [[TMP163]], [[TMP12]]
; GATHER-INTERLEAVE-NEXT:    [[TMP165:%.*]] = add i32 [[TMP164]], [[TMP15]]
; GATHER-INTERLEAVE-NEXT:    [[TMP166:%.*]] = add i32 [[TMP165]], [[TMP18]]
; GATHER-INTERLEAVE-NEXT:    [[TMP167:%.*]] = add i32 [[TMP166]], [[TMP21]]
; GATHER-INTERLEAVE-NEXT:    [[TMP168:%.*]] = add i32 [[TMP167]], [[TMP24]]
; GATHER-INTERLEAVE-NEXT:    [[TMP169:%.*]] = add i32 [[TMP168]], [[TMP27]]
; GATHER-INTERLEAVE-NEXT:    [[TMP170:%.*]] = zext i32 [[TMP169]] to i64
; GATHER-INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP170]]
; GATHER-INTERLEAVE-NEXT:    [[VEC_IND_NEXT]] = add <vscale x 2 x i64> [[STEP_ADD20]], [[DOTSPLAT22]]
; GATHER-INTERLEAVE-NEXT:    [[TMP171:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; GATHER-INTERLEAVE-NEXT:    br i1 [[TMP171]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; GATHER-INTERLEAVE:       for.cond.cleanup:
; GATHER-INTERLEAVE-NEXT:    ret void
; GATHER-INTERLEAVE:       for.body:
; GATHER-INTERLEAVE-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_BODY]] ], [ 0, [[ENTRY:%.*]] ]
; GATHER-INTERLEAVE-NEXT:    [[B_2:%.*]] = getelementptr inbounds [[STRUCT_FOO:%.*]], %struct.foo* [[B]], i64 [[INDVARS_IV]], i32 1
; GATHER-INTERLEAVE-NEXT:    [[TMP172:%.*]] = load i32, i32* [[B_2]], align 4
; GATHER-INTERLEAVE-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds i32, i32* [[A]], i64 [[INDVARS_IV]]
; GATHER-INTERLEAVE-NEXT:    [[TMP173:%.*]] = load i32, i32* [[ARRAYIDX2]], align 4
; GATHER-INTERLEAVE-NEXT:    [[ADD:%.*]] = add nsw i32 [[TMP173]], [[TMP172]]
; GATHER-INTERLEAVE-NEXT:    store i32 [[ADD]], i32* [[ARRAYIDX2]], align 4
; GATHER-INTERLEAVE-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; GATHER-INTERLEAVE-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], 1024
; GATHER-INTERLEAVE-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP2:![0-9]+]]
;
; STRIDED-LABEL: @struct_gather(
; STRIDED-NEXT:  entry:
; STRIDED-NEXT:    [[SCEVGEP:%.*]] = getelementptr [[STRUCT_FOO:%.*]], %struct.foo* [[B:%.*]], i64 0, i32 1
; STRIDED-NEXT:    [[TMP0:%.*]] = call i64 @llvm.vscale.i64()
; STRIDED-NEXT:    [[TMP1:%.*]] = shl i64 [[TMP0]], 1
; STRIDED-NEXT:    [[TMP2:%.*]] = icmp ugt i64 [[TMP1]], -1025
; STRIDED-NEXT:    br i1 [[TMP2]], label [[FOR_BODY:%.*]], label [[VECTOR_BODY:%.*]]
; STRIDED:       vector.body:
; STRIDED-NEXT:    [[INDEX:%.*]] = phi i64 [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ], [ 0, [[ENTRY:%.*]] ]
; STRIDED-NEXT:    [[TMP3:%.*]] = sub i64 1024, [[INDEX]]
; STRIDED-NEXT:    [[TMP4:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP3]], i64 2, i64 0)
; STRIDED-NEXT:    [[TMP5:%.*]] = trunc i64 [[TMP4]] to i32
; STRIDED-NEXT:    [[TMP6:%.*]] = shl i64 [[INDEX]], 2
; STRIDED-NEXT:    [[TMP7:%.*]] = getelementptr i32, i32* [[SCEVGEP]], i64 [[TMP6]]
; STRIDED-NEXT:    [[VP_STRIDED_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP7]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-NEXT:    [[TMP8:%.*]] = getelementptr inbounds i32, i32* [[A:%.*]], i64 [[INDEX]]
; STRIDED-NEXT:    [[TMP9:%.*]] = bitcast i32* [[TMP8]] to <vscale x 2 x i32>*
; STRIDED-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP9]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-NEXT:    [[VP_OP:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> [[VP_STRIDED_LOAD]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-NEXT:    [[TMP10:%.*]] = bitcast i32* [[TMP8]] to <vscale x 2 x i32>*
; STRIDED-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP]], <vscale x 2 x i32>* [[TMP10]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-NEXT:    [[TMP11:%.*]] = and i64 [[TMP4]], 4294967295
; STRIDED-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP11]]
; STRIDED-NEXT:    [[TMP12:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; STRIDED-NEXT:    br i1 [[TMP12]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; STRIDED:       for.cond.cleanup:
; STRIDED-NEXT:    ret void
; STRIDED:       for.body:
; STRIDED-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_BODY]] ], [ 0, [[ENTRY]] ]
; STRIDED-NEXT:    [[B_2:%.*]] = getelementptr inbounds [[STRUCT_FOO]], %struct.foo* [[B]], i64 [[INDVARS_IV]], i32 1
; STRIDED-NEXT:    [[TMP13:%.*]] = load i32, i32* [[B_2]], align 4
; STRIDED-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds i32, i32* [[A]], i64 [[INDVARS_IV]]
; STRIDED-NEXT:    [[TMP14:%.*]] = load i32, i32* [[ARRAYIDX2]], align 4
; STRIDED-NEXT:    [[ADD:%.*]] = add nsw i32 [[TMP14]], [[TMP13]]
; STRIDED-NEXT:    store i32 [[ADD]], i32* [[ARRAYIDX2]], align 4
; STRIDED-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; STRIDED-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], 1024
; STRIDED-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP2:![0-9]+]]
;
; STRIDED-INTERLEAVE-LABEL: @struct_gather(
; STRIDED-INTERLEAVE-NEXT:  entry:
; STRIDED-INTERLEAVE-NEXT:    [[SCEVGEP:%.*]] = getelementptr [[STRUCT_FOO:%.*]], %struct.foo* [[B:%.*]], i64 0, i32 1
; STRIDED-INTERLEAVE-NEXT:    [[TMP0:%.*]] = call i64 @llvm.vscale.i64()
; STRIDED-INTERLEAVE-NEXT:    [[TMP1:%.*]] = shl i64 [[TMP0]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP2:%.*]] = icmp ugt i64 [[TMP1]], -1025
; STRIDED-INTERLEAVE-NEXT:    br i1 [[TMP2]], label [[FOR_BODY:%.*]], label [[VECTOR_BODY:%.*]]
; STRIDED-INTERLEAVE:       vector.body:
; STRIDED-INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ], [ 0, [[ENTRY:%.*]] ]
; STRIDED-INTERLEAVE-NEXT:    [[TMP3:%.*]] = sub i64 1024, [[INDEX]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP4:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP3]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP5:%.*]] = trunc i64 [[TMP4]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP6:%.*]] = sub i64 [[TMP3]], [[TMP4]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP7:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP6]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP8:%.*]] = trunc i64 [[TMP7]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP9:%.*]] = sub i64 [[TMP6]], [[TMP7]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP10:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP9]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP11:%.*]] = trunc i64 [[TMP10]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP12:%.*]] = sub i64 [[TMP9]], [[TMP10]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP13:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP12]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP14:%.*]] = trunc i64 [[TMP13]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP15:%.*]] = sub i64 [[TMP12]], [[TMP13]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP16:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP15]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP17:%.*]] = trunc i64 [[TMP16]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP18:%.*]] = sub i64 [[TMP15]], [[TMP16]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP19:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP18]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP20:%.*]] = trunc i64 [[TMP19]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP21:%.*]] = sub i64 [[TMP18]], [[TMP19]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP22:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP21]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP23:%.*]] = trunc i64 [[TMP22]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP24:%.*]] = sub i64 [[TMP21]], [[TMP22]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP25:%.*]] = call i64 @llvm.epi.vsetvl(i64 [[TMP24]], i64 2, i64 0)
; STRIDED-INTERLEAVE-NEXT:    [[TMP26:%.*]] = trunc i64 [[TMP25]] to i32
; STRIDED-INTERLEAVE-NEXT:    [[TMP27:%.*]] = shl i64 [[INDEX]], 2
; STRIDED-INTERLEAVE-NEXT:    [[TMP28:%.*]] = getelementptr i32, i32* [[SCEVGEP]], i64 [[TMP27]]
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP28]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP29:%.*]] = shl i64 [[TMP4]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP30:%.*]] = and i64 [[TMP29]], 68719476720
; STRIDED-INTERLEAVE-NEXT:    [[TMP31:%.*]] = mul i64 [[INDEX]], [[TMP30]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP32:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP33:%.*]] = getelementptr i8, i8* [[TMP32]], i64 [[TMP31]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP34:%.*]] = bitcast i8* [[TMP33]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD25:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP34]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP35:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP36:%.*]] = zext i32 [[TMP35]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP37:%.*]] = shl nuw nsw i64 [[TMP36]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP38:%.*]] = mul i64 [[INDEX]], [[TMP37]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP39:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP40:%.*]] = getelementptr i8, i8* [[TMP39]], i64 [[TMP38]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP41:%.*]] = bitcast i8* [[TMP40]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD26:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP41]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP42:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP43:%.*]] = add i32 [[TMP42]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP44:%.*]] = zext i32 [[TMP43]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP45:%.*]] = shl nuw nsw i64 [[TMP44]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP46:%.*]] = mul i64 [[INDEX]], [[TMP45]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP47:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP48:%.*]] = getelementptr i8, i8* [[TMP47]], i64 [[TMP46]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP49:%.*]] = bitcast i8* [[TMP48]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD27:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP49]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP50:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP51:%.*]] = add i32 [[TMP50]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP52:%.*]] = add i32 [[TMP51]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP53:%.*]] = zext i32 [[TMP52]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP54:%.*]] = shl nuw nsw i64 [[TMP53]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP55:%.*]] = mul i64 [[INDEX]], [[TMP54]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP56:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP57:%.*]] = getelementptr i8, i8* [[TMP56]], i64 [[TMP55]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP58:%.*]] = bitcast i8* [[TMP57]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD28:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP58]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP59:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP60:%.*]] = add i32 [[TMP59]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP61:%.*]] = add i32 [[TMP60]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP62:%.*]] = add i32 [[TMP61]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP63:%.*]] = zext i32 [[TMP62]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP64:%.*]] = shl nuw nsw i64 [[TMP63]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP65:%.*]] = mul i64 [[INDEX]], [[TMP64]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP66:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP67:%.*]] = getelementptr i8, i8* [[TMP66]], i64 [[TMP65]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP68:%.*]] = bitcast i8* [[TMP67]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD29:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP68]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP69:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP70:%.*]] = add i32 [[TMP69]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP71:%.*]] = add i32 [[TMP70]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP72:%.*]] = add i32 [[TMP71]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP73:%.*]] = add i32 [[TMP72]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP74:%.*]] = zext i32 [[TMP73]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP75:%.*]] = shl nuw nsw i64 [[TMP74]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP76:%.*]] = mul i64 [[INDEX]], [[TMP75]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP77:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP78:%.*]] = getelementptr i8, i8* [[TMP77]], i64 [[TMP76]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP79:%.*]] = bitcast i8* [[TMP78]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD30:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP79]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP80:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP80]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP82:%.*]] = add i32 [[TMP81]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP83:%.*]] = add i32 [[TMP82]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP84:%.*]] = add i32 [[TMP83]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP84]], [[TMP23]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP86:%.*]] = zext i32 [[TMP85]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP87:%.*]] = shl nuw nsw i64 [[TMP86]], 4
; STRIDED-INTERLEAVE-NEXT:    [[TMP88:%.*]] = mul i64 [[INDEX]], [[TMP87]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP89:%.*]] = bitcast i32* [[SCEVGEP]] to i8*
; STRIDED-INTERLEAVE-NEXT:    [[TMP90:%.*]] = getelementptr i8, i8* [[TMP89]], i64 [[TMP88]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP91:%.*]] = bitcast i8* [[TMP90]] to i32*
; STRIDED-INTERLEAVE-NEXT:    [[VP_STRIDED_LOAD31:%.*]] = call <vscale x 2 x i32> @llvm.experimental.vp.strided.load.nxv2i32.p0i32.i64(i32* [[TMP91]], i64 16, <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP26]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, i32* [[A:%.*]], i64 [[INDEX]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP93:%.*]] = bitcast i32* [[TMP92]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP93]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP94:%.*]] = sext i32 [[TMP5]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP95:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP94]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP96:%.*]] = bitcast i32* [[TMP95]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD32:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP96]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP97:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP98:%.*]] = sext i32 [[TMP97]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP99:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP98]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP100:%.*]] = bitcast i32* [[TMP99]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD33:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP100]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP101:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP102:%.*]] = add i32 [[TMP101]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP103:%.*]] = sext i32 [[TMP102]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP104:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP103]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP105:%.*]] = bitcast i32* [[TMP104]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD34:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP105]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP106:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP107:%.*]] = add i32 [[TMP106]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP108:%.*]] = add i32 [[TMP107]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP109:%.*]] = sext i32 [[TMP108]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP110:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP109]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP111:%.*]] = bitcast i32* [[TMP110]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD35:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP111]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP112:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP113:%.*]] = add i32 [[TMP112]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP114:%.*]] = add i32 [[TMP113]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP115:%.*]] = add i32 [[TMP114]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP116:%.*]] = sext i32 [[TMP115]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP117:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP116]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP118:%.*]] = bitcast i32* [[TMP117]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD36:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP118]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP119:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP120:%.*]] = add i32 [[TMP119]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP121:%.*]] = add i32 [[TMP120]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP122:%.*]] = add i32 [[TMP121]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP123:%.*]] = add i32 [[TMP122]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP124:%.*]] = sext i32 [[TMP123]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP125:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP124]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP126:%.*]] = bitcast i32* [[TMP125]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD37:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP126]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP127:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP128:%.*]] = add i32 [[TMP127]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP129:%.*]] = add i32 [[TMP128]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP130:%.*]] = add i32 [[TMP129]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP131:%.*]] = add i32 [[TMP130]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP132:%.*]] = add i32 [[TMP131]], [[TMP23]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP133:%.*]] = sext i32 [[TMP132]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP134:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP133]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP135:%.*]] = bitcast i32* [[TMP134]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP_LOAD38:%.*]] = call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP135]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP26]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> [[VP_STRIDED_LOAD]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP39:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD32]], <vscale x 2 x i32> [[VP_STRIDED_LOAD25]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP40:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD33]], <vscale x 2 x i32> [[VP_STRIDED_LOAD26]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP41:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD34]], <vscale x 2 x i32> [[VP_STRIDED_LOAD27]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP42:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD35]], <vscale x 2 x i32> [[VP_STRIDED_LOAD28]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP43:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD36]], <vscale x 2 x i32> [[VP_STRIDED_LOAD29]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP44:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD37]], <vscale x 2 x i32> [[VP_STRIDED_LOAD30]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[VP_OP45:%.*]] = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD38]], <vscale x 2 x i32> [[VP_STRIDED_LOAD31]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP26]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP136:%.*]] = bitcast i32* [[TMP92]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP]], <vscale x 2 x i32>* [[TMP136]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP5]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP137:%.*]] = sext i32 [[TMP5]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP138:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP137]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP139:%.*]] = bitcast i32* [[TMP138]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP39]], <vscale x 2 x i32>* [[TMP139]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP8]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP140:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP141:%.*]] = sext i32 [[TMP140]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP142:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP141]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP143:%.*]] = bitcast i32* [[TMP142]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP40]], <vscale x 2 x i32>* [[TMP143]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP11]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP144:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP145:%.*]] = add i32 [[TMP144]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP146:%.*]] = sext i32 [[TMP145]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP147:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP146]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP148:%.*]] = bitcast i32* [[TMP147]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP41]], <vscale x 2 x i32>* [[TMP148]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP14]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP149:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP150:%.*]] = add i32 [[TMP149]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP151:%.*]] = add i32 [[TMP150]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP152:%.*]] = sext i32 [[TMP151]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP153:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP152]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP154:%.*]] = bitcast i32* [[TMP153]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP42]], <vscale x 2 x i32>* [[TMP154]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP17]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP155:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP156:%.*]] = add i32 [[TMP155]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP157:%.*]] = add i32 [[TMP156]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP158:%.*]] = add i32 [[TMP157]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP159:%.*]] = sext i32 [[TMP158]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP160:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP159]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP161:%.*]] = bitcast i32* [[TMP160]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP43]], <vscale x 2 x i32>* [[TMP161]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP20]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP162:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP163:%.*]] = add i32 [[TMP162]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP164:%.*]] = add i32 [[TMP163]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP165:%.*]] = add i32 [[TMP164]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP166:%.*]] = add i32 [[TMP165]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP167:%.*]] = sext i32 [[TMP166]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP168:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP167]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP169:%.*]] = bitcast i32* [[TMP168]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP44]], <vscale x 2 x i32>* [[TMP169]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP23]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP170:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP171:%.*]] = add i32 [[TMP170]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP172:%.*]] = add i32 [[TMP171]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP173:%.*]] = add i32 [[TMP172]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP174:%.*]] = add i32 [[TMP173]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP175:%.*]] = add i32 [[TMP174]], [[TMP23]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP176:%.*]] = sext i32 [[TMP175]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[TMP177:%.*]] = getelementptr inbounds i32, i32* [[TMP92]], i64 [[TMP176]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP178:%.*]] = bitcast i32* [[TMP177]] to <vscale x 2 x i32>*
; STRIDED-INTERLEAVE-NEXT:    call void @llvm.vp.store.nxv2i32.p0nxv2i32(<vscale x 2 x i32> [[VP_OP45]], <vscale x 2 x i32>* [[TMP178]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i32 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP26]])
; STRIDED-INTERLEAVE-NEXT:    [[TMP179:%.*]] = add i32 [[TMP5]], [[TMP8]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP180:%.*]] = add i32 [[TMP179]], [[TMP11]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP181:%.*]] = add i32 [[TMP180]], [[TMP14]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP182:%.*]] = add i32 [[TMP181]], [[TMP17]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP183:%.*]] = add i32 [[TMP182]], [[TMP20]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP184:%.*]] = add i32 [[TMP183]], [[TMP23]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP185:%.*]] = add i32 [[TMP184]], [[TMP26]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP186:%.*]] = zext i32 [[TMP185]] to i64
; STRIDED-INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP186]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP187:%.*]] = icmp eq i64 [[INDEX_NEXT]], 1024
; STRIDED-INTERLEAVE-NEXT:    br i1 [[TMP187]], label [[FOR_COND_CLEANUP:%.*]], label [[VECTOR_BODY]], !llvm.loop [[LOOP0:![0-9]+]]
; STRIDED-INTERLEAVE:       for.cond.cleanup:
; STRIDED-INTERLEAVE-NEXT:    ret void
; STRIDED-INTERLEAVE:       for.body:
; STRIDED-INTERLEAVE-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_BODY]] ], [ 0, [[ENTRY]] ]
; STRIDED-INTERLEAVE-NEXT:    [[B_2:%.*]] = getelementptr inbounds [[STRUCT_FOO]], %struct.foo* [[B]], i64 [[INDVARS_IV]], i32 1
; STRIDED-INTERLEAVE-NEXT:    [[TMP188:%.*]] = load i32, i32* [[B_2]], align 4
; STRIDED-INTERLEAVE-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds i32, i32* [[A]], i64 [[INDVARS_IV]]
; STRIDED-INTERLEAVE-NEXT:    [[TMP189:%.*]] = load i32, i32* [[ARRAYIDX2]], align 4
; STRIDED-INTERLEAVE-NEXT:    [[ADD:%.*]] = add nsw i32 [[TMP189]], [[TMP188]]
; STRIDED-INTERLEAVE-NEXT:    store i32 [[ADD]], i32* [[ARRAYIDX2]], align 4
; STRIDED-INTERLEAVE-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; STRIDED-INTERLEAVE-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], 1024
; STRIDED-INTERLEAVE-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP2:![0-9]+]]
;
entry:
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body
  ret void

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.body ]
  %b.2 = getelementptr inbounds %struct.foo, %struct.foo* %B, i64 %indvars.iv, i32 1
  %0 = load i32, i32* %b.2, align 4
  %arrayidx2 = getelementptr inbounds i32, i32* %A, i64 %indvars.iv
  %1 = load i32, i32* %arrayidx2, align 4
  %add = add nsw i32 %1, %0
  store i32 %add, i32* %arrayidx2, align 4
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 1024
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}
