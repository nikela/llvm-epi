; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi -riscv-v-vector-bits-min=64 \
; RUN:    -scalable-vectorization=only \
; RUN:    -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -O2 < %s  -o - | FileCheck %s --check-prefix=CHECK
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi -riscv-v-vector-bits-min=64 \
; RUN:    -scalable-vectorization=only -interleave-no-scalar-epilogue=true \
; RUN:    -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -O2 < %s  -o - | FileCheck %s --check-prefix=INTERLEAVE

; Function Attrs: argmemonly nofree norecurse nosync nounwind
define dso_local void @fu(double* noalias nocapture noundef writeonly %a, double* noalias nocapture noundef readonly %b, i32 noundef signext %n, i32* noalias nocapture noundef readonly %m, i32** nocapture noundef readonly %w) local_unnamed_addr #0 {
; CHECK-LABEL: @fu(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CMP37:%.*]] = icmp sgt i32 [[N:%.*]], 0
; CHECK-NEXT:    br i1 [[CMP37]], label [[FOR_BODY_PREHEADER:%.*]], label [[FOR_COND_CLEANUP:%.*]]
; CHECK:       for.body.preheader:
; CHECK-NEXT:    [[WIDE_TRIP_COUNT:%.*]] = zext i32 [[N]] to i64
; CHECK-NEXT:    [[TMP0:%.*]] = xor i64 [[WIDE_TRIP_COUNT]], -1
; CHECK-NEXT:    [[TMP1:%.*]] = tail call i64 @llvm.vscale.i64()
; CHECK-NEXT:    [[TMP2:%.*]] = shl i64 [[TMP1]], 1
; CHECK-NEXT:    [[TMP3:%.*]] = icmp ugt i64 [[TMP2]], [[TMP0]]
; CHECK-NEXT:    br i1 [[TMP3]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; CHECK:       vector.ph:
; CHECK-NEXT:    [[TRIP_COUNT_MINUS_1:%.*]] = add nsw i64 [[WIDE_TRIP_COUNT]], -1
; CHECK-NEXT:    [[BROADCAST_SPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TRIP_COUNT_MINUS_1]], i64 0
; CHECK-NEXT:    [[BROADCAST_SPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; CHECK-NEXT:    [[TMP4:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; CHECK-NEXT:    br label [[VECTOR_BODY:%.*]]
; CHECK:       vector.body:
; CHECK-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; CHECK-NEXT:    [[TMP5:%.*]] = sub i64 [[WIDE_TRIP_COUNT]], [[INDEX]]
; CHECK-NEXT:    [[TMP6:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP5]], i64 3, i64 1)
; CHECK-NEXT:    [[TMP7:%.*]] = trunc i64 [[TMP6]] to i32
; CHECK-NEXT:    [[BROADCAST_SPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[INDEX]], i64 0
; CHECK-NEXT:    [[BROADCAST_SPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; CHECK-NEXT:    [[VEC_IV:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP4]]
; CHECK-NEXT:    [[TMP8:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV]], [[BROADCAST_SPLAT]]
; CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds i32, i32* [[M:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[TMP10:%.*]] = bitcast i32* [[TMP9]] to <vscale x 2 x i32>*
; CHECK-NEXT:    [[VP_OP_LOAD:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP10]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]]), !tbaa [[TBAA4:![0-9]+]]
; CHECK-NEXT:    [[VP_OP_ICMP:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds double, double* [[B:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_NOT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP8]], <vscale x 2 x i1> [[VP_MASK_NOT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP12:%.*]] = bitcast double* [[TMP11]] to <vscale x 2 x double>*
; CHECK-NEXT:    [[VP_OP_LOAD3:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP12]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP7]]), !tbaa [[TBAA8:![0-9]+]]
; CHECK-NEXT:    [[VP_OP:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD3]], <vscale x 2 x double> [[VP_OP_LOAD3]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP7]])
; CHECK-NEXT:    [[TMP13:%.*]] = getelementptr inbounds i32*, i32** [[W:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_SELECT4:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP8]], <vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP14:%.*]] = bitcast i32** [[TMP13]] to <vscale x 2 x i32*>*
; CHECK-NEXT:    [[VP_OP_LOAD5:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP14]], <vscale x 2 x i1> [[VP_MASK_SELECT4]], i32 [[TMP7]]), !tbaa [[TBAA10:![0-9]+]]
; CHECK-NEXT:    [[VP_OP_ICMP6:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD5]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT4]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_OP_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_OP_ICMP6]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_NOT7:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT8:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_MASK_NOT7]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP15:%.*]] = bitcast double* [[TMP11]] to <vscale x 2 x double>*
; CHECK-NEXT:    [[VP_OP_LOAD9:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP15]], <vscale x 2 x i1> [[VP_MASK_SELECT8]], i32 [[TMP7]]), !tbaa [[TBAA8]]
; CHECK-NEXT:    [[VP_OP10:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD9]], <vscale x 2 x double> [[VP_OP_LOAD9]], <vscale x 2 x i1> [[VP_MASK_SELECT8]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT11:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_PREDPHI:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT8]], <vscale x 2 x double> [[VP_OP10]], <vscale x 2 x double> [[VP_OP]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_PREDPHI12:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT11]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI]], i32 [[TMP7]])
; CHECK-NEXT:    [[TMP16:%.*]] = getelementptr inbounds double, double* [[A:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_OR:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT8]], <vscale x 2 x i1> [[VP_MASK_SELECT11]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_OR13:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR]], <vscale x 2 x i1> [[VP_MASK_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP17:%.*]] = bitcast double* [[TMP16]] to <vscale x 2 x double>*
; CHECK-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI12]], <vscale x 2 x double>* [[TMP17]], <vscale x 2 x i1> [[VP_MASK_OR13]], i32 [[TMP7]]), !tbaa [[TBAA8]]
; CHECK-NEXT:    [[TMP18:%.*]] = and i64 [[TMP6]], 4294967295
; CHECK-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP18]]
; CHECK-NEXT:    [[TMP19:%.*]] = icmp eq i64 [[INDEX_NEXT]], [[WIDE_TRIP_COUNT]]
; CHECK-NEXT:    br i1 [[TMP19]], label [[FOR_COND_CLEANUP]], label [[VECTOR_BODY]], !llvm.loop [[LOOP12:![0-9]+]]
; CHECK:       for.cond.cleanup:
; CHECK-NEXT:    ret void
; CHECK:       for.body:
; CHECK-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_INC:%.*]] ], [ 0, [[FOR_BODY_PREHEADER]] ]
; CHECK-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds i32, i32* [[M]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP20:%.*]] = load i32, i32* [[ARRAYIDX]], align 4, !tbaa [[TBAA4]]
; CHECK-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i32 [[TMP20]], 0
; CHECK-NEXT:    br i1 [[TOBOOL_NOT]], label [[IF_ELSE:%.*]], label [[IF_THEN:%.*]]
; CHECK:       if.then:
; CHECK-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds double, double* [[B]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP21:%.*]] = load double, double* [[ARRAYIDX2]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[MUL:%.*]] = fmul double [[TMP21]], [[TMP21]]
; CHECK-NEXT:    br label [[FOR_INC]]
; CHECK:       if.else:
; CHECK-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds i32*, i32** [[W]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP22:%.*]] = load i32*, i32** [[ARRAYIDX8]], align 8, !tbaa [[TBAA10]]
; CHECK-NEXT:    [[TOBOOL9_NOT:%.*]] = icmp eq i32* [[TMP22]], null
; CHECK-NEXT:    br i1 [[TOBOOL9_NOT]], label [[FOR_INC]], label [[IF_THEN10:%.*]]
; CHECK:       if.then10:
; CHECK-NEXT:    [[ARRAYIDX12:%.*]] = getelementptr inbounds double, double* [[B]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP23:%.*]] = load double, double* [[ARRAYIDX12]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[ADD:%.*]] = fadd double [[TMP23]], [[TMP23]]
; CHECK-NEXT:    br label [[FOR_INC]]
; CHECK:       for.inc:
; CHECK-NEXT:    [[MUL_SINK:%.*]] = phi double [ [[MUL]], [[IF_THEN]] ], [ [[ADD]], [[IF_THEN10]] ], [ 3.000000e+00, [[IF_ELSE]] ]
; CHECK-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds double, double* [[A]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    store double [[MUL_SINK]], double* [[ARRAYIDX6]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; CHECK-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], [[WIDE_TRIP_COUNT]]
; CHECK-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP16:![0-9]+]]
;
; INTERLEAVE-LABEL: @fu(
; INTERLEAVE-NEXT:  entry:
; INTERLEAVE-NEXT:    [[CMP37:%.*]] = icmp sgt i32 [[N:%.*]], 0
; INTERLEAVE-NEXT:    br i1 [[CMP37]], label [[FOR_BODY_PREHEADER:%.*]], label [[FOR_COND_CLEANUP:%.*]]
; INTERLEAVE:       for.body.preheader:
; INTERLEAVE-NEXT:    [[WIDE_TRIP_COUNT:%.*]] = zext i32 [[N]] to i64
; INTERLEAVE-NEXT:    [[TMP0:%.*]] = xor i64 [[WIDE_TRIP_COUNT]], -1
; INTERLEAVE-NEXT:    [[TMP1:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP2:%.*]] = shl i64 [[TMP1]], 4
; INTERLEAVE-NEXT:    [[TMP3:%.*]] = icmp ugt i64 [[TMP2]], [[TMP0]]
; INTERLEAVE-NEXT:    br i1 [[TMP3]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; INTERLEAVE:       vector.ph:
; INTERLEAVE-NEXT:    [[TRIP_COUNT_MINUS_1:%.*]] = add nsw i64 [[WIDE_TRIP_COUNT]], -1
; INTERLEAVE-NEXT:    [[BROADCAST_SPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TRIP_COUNT_MINUS_1]], i64 0
; INTERLEAVE-NEXT:    [[BROADCAST_SPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP4:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP5:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP6:%.*]] = shl i64 [[TMP5]], 1
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP6]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP7:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP8:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT]], [[TMP7]]
; INTERLEAVE-NEXT:    [[TMP9:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP10:%.*]] = shl i64 [[TMP9]], 2
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT4:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP10]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT5:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT4]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP11:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP12:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT5]], [[TMP11]]
; INTERLEAVE-NEXT:    [[TMP13:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP14:%.*]] = mul i64 [[TMP13]], 6
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT7:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP14]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT8:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT7]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP15:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP16:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT8]], [[TMP15]]
; INTERLEAVE-NEXT:    [[TMP17:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP18:%.*]] = shl i64 [[TMP17]], 3
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT10:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP18]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT11:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT10]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP19:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP20:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT11]], [[TMP19]]
; INTERLEAVE-NEXT:    [[TMP21:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP22:%.*]] = mul i64 [[TMP21]], 10
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT13:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP22]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT14:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT13]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP23:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP24:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT14]], [[TMP23]]
; INTERLEAVE-NEXT:    [[TMP25:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP26:%.*]] = mul i64 [[TMP25]], 12
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT16:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP26]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT17:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT16]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP27:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP28:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT17]], [[TMP27]]
; INTERLEAVE-NEXT:    [[TMP29:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP30:%.*]] = mul i64 [[TMP29]], 14
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT19:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP30]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT20:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT19]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP31:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP32:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT20]], [[TMP31]]
; INTERLEAVE-NEXT:    br label [[VECTOR_BODY:%.*]]
; INTERLEAVE:       vector.body:
; INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; INTERLEAVE-NEXT:    [[TMP33:%.*]] = sub i64 [[WIDE_TRIP_COUNT]], [[INDEX]]
; INTERLEAVE-NEXT:    [[TMP34:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP33]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP35:%.*]] = trunc i64 [[TMP34]] to i32
; INTERLEAVE-NEXT:    [[TMP36:%.*]] = sub i64 [[TMP33]], [[TMP34]]
; INTERLEAVE-NEXT:    [[TMP37:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP36]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP38:%.*]] = trunc i64 [[TMP37]] to i32
; INTERLEAVE-NEXT:    [[TMP39:%.*]] = sub i64 [[TMP36]], [[TMP37]]
; INTERLEAVE-NEXT:    [[TMP40:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP39]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP41:%.*]] = trunc i64 [[TMP40]] to i32
; INTERLEAVE-NEXT:    [[TMP42:%.*]] = sub i64 [[TMP39]], [[TMP40]]
; INTERLEAVE-NEXT:    [[TMP43:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP42]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP44:%.*]] = trunc i64 [[TMP43]] to i32
; INTERLEAVE-NEXT:    [[TMP45:%.*]] = sub i64 [[TMP42]], [[TMP43]]
; INTERLEAVE-NEXT:    [[TMP46:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP45]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP47:%.*]] = trunc i64 [[TMP46]] to i32
; INTERLEAVE-NEXT:    [[TMP48:%.*]] = sub i64 [[TMP45]], [[TMP46]]
; INTERLEAVE-NEXT:    [[TMP49:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP48]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP50:%.*]] = trunc i64 [[TMP49]] to i32
; INTERLEAVE-NEXT:    [[TMP51:%.*]] = sub i64 [[TMP48]], [[TMP49]]
; INTERLEAVE-NEXT:    [[TMP52:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP51]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP53:%.*]] = trunc i64 [[TMP52]] to i32
; INTERLEAVE-NEXT:    [[TMP54:%.*]] = sub i64 [[TMP51]], [[TMP52]]
; INTERLEAVE-NEXT:    [[TMP55:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP54]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP56:%.*]] = trunc i64 [[TMP55]] to i32
; INTERLEAVE-NEXT:    [[BROADCAST_SPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[INDEX]], i64 0
; INTERLEAVE-NEXT:    [[BROADCAST_SPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[VEC_IV:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP4]]
; INTERLEAVE-NEXT:    [[VEC_IV3:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP8]]
; INTERLEAVE-NEXT:    [[VEC_IV6:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP12]]
; INTERLEAVE-NEXT:    [[VEC_IV9:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP16]]
; INTERLEAVE-NEXT:    [[VEC_IV12:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP20]]
; INTERLEAVE-NEXT:    [[VEC_IV15:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP24]]
; INTERLEAVE-NEXT:    [[VEC_IV18:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP28]]
; INTERLEAVE-NEXT:    [[VEC_IV21:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP32]]
; INTERLEAVE-NEXT:    [[TMP57:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP58:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV3]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP59:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV6]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP60:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV9]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP61:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV12]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP62:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV15]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP63:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV18]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP64:%.*]] = icmp ule <vscale x 2 x i64> [[VEC_IV21]], [[BROADCAST_SPLAT]]
; INTERLEAVE-NEXT:    [[TMP65:%.*]] = getelementptr inbounds i32, i32* [[M:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[TMP66:%.*]] = bitcast i32* [[TMP65]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP66]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]]), !tbaa [[TBAA4:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP67:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP68:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP67]]
; INTERLEAVE-NEXT:    [[TMP69:%.*]] = bitcast i32* [[TMP68]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD22:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP69]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP70:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP71:%.*]] = sext i32 [[TMP70]] to i64
; INTERLEAVE-NEXT:    [[TMP72:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP71]]
; INTERLEAVE-NEXT:    [[TMP73:%.*]] = bitcast i32* [[TMP72]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD23:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP73]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP74:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP75:%.*]] = add i32 [[TMP74]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP76:%.*]] = sext i32 [[TMP75]] to i64
; INTERLEAVE-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP76]]
; INTERLEAVE-NEXT:    [[TMP78:%.*]] = bitcast i32* [[TMP77]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD24:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP78]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP79:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP80:%.*]] = add i32 [[TMP79]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP80]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP82:%.*]] = sext i32 [[TMP81]] to i64
; INTERLEAVE-NEXT:    [[TMP83:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP82]]
; INTERLEAVE-NEXT:    [[TMP84:%.*]] = bitcast i32* [[TMP83]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD25:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP84]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP86:%.*]] = add i32 [[TMP85]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP87:%.*]] = add i32 [[TMP86]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP88:%.*]] = add i32 [[TMP87]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP89:%.*]] = sext i32 [[TMP88]] to i64
; INTERLEAVE-NEXT:    [[TMP90:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP89]]
; INTERLEAVE-NEXT:    [[TMP91:%.*]] = bitcast i32* [[TMP90]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD26:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP91]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP92:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP93:%.*]] = add i32 [[TMP92]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP94:%.*]] = add i32 [[TMP93]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP95:%.*]] = add i32 [[TMP94]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP96:%.*]] = add i32 [[TMP95]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP97:%.*]] = sext i32 [[TMP96]] to i64
; INTERLEAVE-NEXT:    [[TMP98:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP97]]
; INTERLEAVE-NEXT:    [[TMP99:%.*]] = bitcast i32* [[TMP98]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD27:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP99]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP100:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP101:%.*]] = add i32 [[TMP100]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP102:%.*]] = add i32 [[TMP101]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP103:%.*]] = add i32 [[TMP102]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP104:%.*]] = add i32 [[TMP103]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP105:%.*]] = add i32 [[TMP104]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP106:%.*]] = sext i32 [[TMP105]] to i64
; INTERLEAVE-NEXT:    [[TMP107:%.*]] = getelementptr inbounds i32, i32* [[TMP65]], i64 [[TMP106]]
; INTERLEAVE-NEXT:    [[TMP108:%.*]] = bitcast i32* [[TMP107]] to <vscale x 2 x i32>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD28:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0nxv2i32(<vscale x 2 x i32>* [[TMP108]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[VP_OP_ICMP:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP29:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD22]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP30:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD23]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP31:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD24]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP32:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD25]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP33:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD26]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP34:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD27]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP35:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD28]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP109:%.*]] = getelementptr inbounds double, double* [[B:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_NOT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT36:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP29]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT37:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP30]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT38:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP31]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT39:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP32]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT40:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP33]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT41:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP34]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT42:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP35]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP57]], <vscale x 2 x i1> [[VP_MASK_NOT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT43:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP58]], <vscale x 2 x i1> [[VP_MASK_NOT36]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT44:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP59]], <vscale x 2 x i1> [[VP_MASK_NOT37]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT45:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP60]], <vscale x 2 x i1> [[VP_MASK_NOT38]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT46:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP61]], <vscale x 2 x i1> [[VP_MASK_NOT39]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT47:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP62]], <vscale x 2 x i1> [[VP_MASK_NOT40]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT48:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP63]], <vscale x 2 x i1> [[VP_MASK_NOT41]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT49:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP64]], <vscale x 2 x i1> [[VP_MASK_NOT42]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP110:%.*]] = bitcast double* [[TMP109]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD50:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP110]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP35]]), !tbaa [[TBAA8:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP111:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP112:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP111]]
; INTERLEAVE-NEXT:    [[TMP113:%.*]] = bitcast double* [[TMP112]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD51:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP113]], <vscale x 2 x i1> [[VP_MASK_SELECT43]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP114:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP115:%.*]] = sext i32 [[TMP114]] to i64
; INTERLEAVE-NEXT:    [[TMP116:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP115]]
; INTERLEAVE-NEXT:    [[TMP117:%.*]] = bitcast double* [[TMP116]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD52:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP117]], <vscale x 2 x i1> [[VP_MASK_SELECT44]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP118:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP119:%.*]] = add i32 [[TMP118]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP120:%.*]] = sext i32 [[TMP119]] to i64
; INTERLEAVE-NEXT:    [[TMP121:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP120]]
; INTERLEAVE-NEXT:    [[TMP122:%.*]] = bitcast double* [[TMP121]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD53:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP122]], <vscale x 2 x i1> [[VP_MASK_SELECT45]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP123:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP124:%.*]] = add i32 [[TMP123]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP125:%.*]] = add i32 [[TMP124]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP126:%.*]] = sext i32 [[TMP125]] to i64
; INTERLEAVE-NEXT:    [[TMP127:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP126]]
; INTERLEAVE-NEXT:    [[TMP128:%.*]] = bitcast double* [[TMP127]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD54:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP128]], <vscale x 2 x i1> [[VP_MASK_SELECT46]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP129:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP130:%.*]] = add i32 [[TMP129]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP131:%.*]] = add i32 [[TMP130]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP132:%.*]] = add i32 [[TMP131]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP133:%.*]] = sext i32 [[TMP132]] to i64
; INTERLEAVE-NEXT:    [[TMP134:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP133]]
; INTERLEAVE-NEXT:    [[TMP135:%.*]] = bitcast double* [[TMP134]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD55:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP135]], <vscale x 2 x i1> [[VP_MASK_SELECT47]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP136:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP137:%.*]] = add i32 [[TMP136]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP138:%.*]] = add i32 [[TMP137]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP139:%.*]] = add i32 [[TMP138]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP140:%.*]] = add i32 [[TMP139]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP141:%.*]] = sext i32 [[TMP140]] to i64
; INTERLEAVE-NEXT:    [[TMP142:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP141]]
; INTERLEAVE-NEXT:    [[TMP143:%.*]] = bitcast double* [[TMP142]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD56:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP143]], <vscale x 2 x i1> [[VP_MASK_SELECT48]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP144:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP145:%.*]] = add i32 [[TMP144]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP146:%.*]] = add i32 [[TMP145]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP147:%.*]] = add i32 [[TMP146]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP148:%.*]] = add i32 [[TMP147]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP149:%.*]] = add i32 [[TMP148]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP150:%.*]] = sext i32 [[TMP149]] to i64
; INTERLEAVE-NEXT:    [[TMP151:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP150]]
; INTERLEAVE-NEXT:    [[TMP152:%.*]] = bitcast double* [[TMP151]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD57:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP152]], <vscale x 2 x i1> [[VP_MASK_SELECT49]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[VP_OP:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD50]], <vscale x 2 x double> [[VP_OP_LOAD50]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP58:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD51]], <vscale x 2 x double> [[VP_OP_LOAD51]], <vscale x 2 x i1> [[VP_MASK_SELECT43]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP59:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD52]], <vscale x 2 x double> [[VP_OP_LOAD52]], <vscale x 2 x i1> [[VP_MASK_SELECT44]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP60:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD53]], <vscale x 2 x double> [[VP_OP_LOAD53]], <vscale x 2 x i1> [[VP_MASK_SELECT45]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP61:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD54]], <vscale x 2 x double> [[VP_OP_LOAD54]], <vscale x 2 x i1> [[VP_MASK_SELECT46]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP62:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD55]], <vscale x 2 x double> [[VP_OP_LOAD55]], <vscale x 2 x i1> [[VP_MASK_SELECT47]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP63:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD56]], <vscale x 2 x double> [[VP_OP_LOAD56]], <vscale x 2 x i1> [[VP_MASK_SELECT48]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP64:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD57]], <vscale x 2 x double> [[VP_OP_LOAD57]], <vscale x 2 x i1> [[VP_MASK_SELECT49]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP153:%.*]] = getelementptr inbounds i32*, i32** [[W:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT65:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP57]], <vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT66:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP58]], <vscale x 2 x i1> [[VP_OP_ICMP29]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT67:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP59]], <vscale x 2 x i1> [[VP_OP_ICMP30]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT68:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP60]], <vscale x 2 x i1> [[VP_OP_ICMP31]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT69:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP61]], <vscale x 2 x i1> [[VP_OP_ICMP32]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT70:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP62]], <vscale x 2 x i1> [[VP_OP_ICMP33]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT71:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP63]], <vscale x 2 x i1> [[VP_OP_ICMP34]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT72:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[TMP64]], <vscale x 2 x i1> [[VP_OP_ICMP35]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP154:%.*]] = bitcast i32** [[TMP153]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD73:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP154]], <vscale x 2 x i1> [[VP_MASK_SELECT65]], i32 [[TMP35]]), !tbaa [[TBAA10:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP155:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP156:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP155]]
; INTERLEAVE-NEXT:    [[TMP157:%.*]] = bitcast i32** [[TMP156]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD74:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP157]], <vscale x 2 x i1> [[VP_MASK_SELECT66]], i32 [[TMP38]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP158:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP159:%.*]] = sext i32 [[TMP158]] to i64
; INTERLEAVE-NEXT:    [[TMP160:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP159]]
; INTERLEAVE-NEXT:    [[TMP161:%.*]] = bitcast i32** [[TMP160]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD75:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP161]], <vscale x 2 x i1> [[VP_MASK_SELECT67]], i32 [[TMP41]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP162:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP163:%.*]] = add i32 [[TMP162]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP164:%.*]] = sext i32 [[TMP163]] to i64
; INTERLEAVE-NEXT:    [[TMP165:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP164]]
; INTERLEAVE-NEXT:    [[TMP166:%.*]] = bitcast i32** [[TMP165]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD76:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP166]], <vscale x 2 x i1> [[VP_MASK_SELECT68]], i32 [[TMP44]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP167:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP168:%.*]] = add i32 [[TMP167]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP169:%.*]] = add i32 [[TMP168]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP170:%.*]] = sext i32 [[TMP169]] to i64
; INTERLEAVE-NEXT:    [[TMP171:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP170]]
; INTERLEAVE-NEXT:    [[TMP172:%.*]] = bitcast i32** [[TMP171]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD77:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP172]], <vscale x 2 x i1> [[VP_MASK_SELECT69]], i32 [[TMP47]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP173:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP174:%.*]] = add i32 [[TMP173]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP175:%.*]] = add i32 [[TMP174]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP176:%.*]] = add i32 [[TMP175]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP177:%.*]] = sext i32 [[TMP176]] to i64
; INTERLEAVE-NEXT:    [[TMP178:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP177]]
; INTERLEAVE-NEXT:    [[TMP179:%.*]] = bitcast i32** [[TMP178]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD78:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP179]], <vscale x 2 x i1> [[VP_MASK_SELECT70]], i32 [[TMP50]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP180:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP181:%.*]] = add i32 [[TMP180]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP182:%.*]] = add i32 [[TMP181]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP183:%.*]] = add i32 [[TMP182]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP184:%.*]] = add i32 [[TMP183]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP185:%.*]] = sext i32 [[TMP184]] to i64
; INTERLEAVE-NEXT:    [[TMP186:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP185]]
; INTERLEAVE-NEXT:    [[TMP187:%.*]] = bitcast i32** [[TMP186]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD79:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP187]], <vscale x 2 x i1> [[VP_MASK_SELECT71]], i32 [[TMP53]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP188:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP189:%.*]] = add i32 [[TMP188]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP190:%.*]] = add i32 [[TMP189]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP191:%.*]] = add i32 [[TMP190]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP192:%.*]] = add i32 [[TMP191]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP193:%.*]] = add i32 [[TMP192]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP194:%.*]] = sext i32 [[TMP193]] to i64
; INTERLEAVE-NEXT:    [[TMP195:%.*]] = getelementptr inbounds i32*, i32** [[TMP153]], i64 [[TMP194]]
; INTERLEAVE-NEXT:    [[TMP196:%.*]] = bitcast i32** [[TMP195]] to <vscale x 2 x i32*>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD80:%.*]] = tail call <vscale x 2 x i32*> @llvm.vp.load.nxv2p0i32.p0nxv2p0i32(<vscale x 2 x i32*>* [[TMP196]], <vscale x 2 x i1> [[VP_MASK_SELECT72]], i32 [[TMP56]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[VP_OP_ICMP81:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD73]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT65]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT65]], <vscale x 2 x i1> [[VP_OP_ICMP81]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP82:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD74]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT66]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT83:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT66]], <vscale x 2 x i1> [[VP_OP_ICMP82]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP84:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD75]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT67]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT85:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT67]], <vscale x 2 x i1> [[VP_OP_ICMP84]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP86:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD76]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT68]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT87:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT68]], <vscale x 2 x i1> [[VP_OP_ICMP86]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP88:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD77]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT69]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT89:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT69]], <vscale x 2 x i1> [[VP_OP_ICMP88]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP90:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD78]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT70]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT91:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT70]], <vscale x 2 x i1> [[VP_OP_ICMP90]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP92:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD79]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT71]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT93:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT71]], <vscale x 2 x i1> [[VP_OP_ICMP92]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP94:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0i32(<vscale x 2 x i32*> [[VP_OP_LOAD80]], <vscale x 2 x i32*> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT72]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT95:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_OP_ICMP94]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT96:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT97:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT83]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT98:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT85]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT99:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT87]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT100:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT89]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT101:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT91]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT102:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT93]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT103:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT95]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT104:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT65]], <vscale x 2 x i1> [[VP_MASK_NOT96]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT105:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT66]], <vscale x 2 x i1> [[VP_MASK_NOT97]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT106:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT67]], <vscale x 2 x i1> [[VP_MASK_NOT98]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT107:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT68]], <vscale x 2 x i1> [[VP_MASK_NOT99]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT108:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT69]], <vscale x 2 x i1> [[VP_MASK_NOT100]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT109:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT70]], <vscale x 2 x i1> [[VP_MASK_NOT101]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT110:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT71]], <vscale x 2 x i1> [[VP_MASK_NOT102]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT111:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_MASK_NOT103]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP197:%.*]] = bitcast double* [[TMP109]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD112:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP197]], <vscale x 2 x i1> [[VP_MASK_SELECT104]], i32 [[TMP35]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP198:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP199:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP198]]
; INTERLEAVE-NEXT:    [[TMP200:%.*]] = bitcast double* [[TMP199]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD113:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP200]], <vscale x 2 x i1> [[VP_MASK_SELECT105]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP201:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP202:%.*]] = sext i32 [[TMP201]] to i64
; INTERLEAVE-NEXT:    [[TMP203:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP202]]
; INTERLEAVE-NEXT:    [[TMP204:%.*]] = bitcast double* [[TMP203]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD114:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP204]], <vscale x 2 x i1> [[VP_MASK_SELECT106]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP205:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP206:%.*]] = add i32 [[TMP205]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP207:%.*]] = sext i32 [[TMP206]] to i64
; INTERLEAVE-NEXT:    [[TMP208:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP207]]
; INTERLEAVE-NEXT:    [[TMP209:%.*]] = bitcast double* [[TMP208]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD115:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP209]], <vscale x 2 x i1> [[VP_MASK_SELECT107]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP210:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP211:%.*]] = add i32 [[TMP210]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP212:%.*]] = add i32 [[TMP211]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP213:%.*]] = sext i32 [[TMP212]] to i64
; INTERLEAVE-NEXT:    [[TMP214:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP213]]
; INTERLEAVE-NEXT:    [[TMP215:%.*]] = bitcast double* [[TMP214]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD116:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP215]], <vscale x 2 x i1> [[VP_MASK_SELECT108]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP216:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP217:%.*]] = add i32 [[TMP216]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP218:%.*]] = add i32 [[TMP217]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP219:%.*]] = add i32 [[TMP218]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP220:%.*]] = sext i32 [[TMP219]] to i64
; INTERLEAVE-NEXT:    [[TMP221:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP220]]
; INTERLEAVE-NEXT:    [[TMP222:%.*]] = bitcast double* [[TMP221]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD117:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP222]], <vscale x 2 x i1> [[VP_MASK_SELECT109]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP223:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP224:%.*]] = add i32 [[TMP223]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP225:%.*]] = add i32 [[TMP224]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP226:%.*]] = add i32 [[TMP225]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP227:%.*]] = add i32 [[TMP226]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP228:%.*]] = sext i32 [[TMP227]] to i64
; INTERLEAVE-NEXT:    [[TMP229:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP228]]
; INTERLEAVE-NEXT:    [[TMP230:%.*]] = bitcast double* [[TMP229]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD118:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP230]], <vscale x 2 x i1> [[VP_MASK_SELECT110]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP231:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP232:%.*]] = add i32 [[TMP231]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP233:%.*]] = add i32 [[TMP232]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP234:%.*]] = add i32 [[TMP233]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP235:%.*]] = add i32 [[TMP234]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP236:%.*]] = add i32 [[TMP235]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP237:%.*]] = sext i32 [[TMP236]] to i64
; INTERLEAVE-NEXT:    [[TMP238:%.*]] = getelementptr inbounds double, double* [[TMP109]], i64 [[TMP237]]
; INTERLEAVE-NEXT:    [[TMP239:%.*]] = bitcast double* [[TMP238]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    [[VP_OP_LOAD119:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0nxv2f64(<vscale x 2 x double>* [[TMP239]], <vscale x 2 x i1> [[VP_MASK_SELECT111]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[VP_OP120:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD112]], <vscale x 2 x double> [[VP_OP_LOAD112]], <vscale x 2 x i1> [[VP_MASK_SELECT104]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP121:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD113]], <vscale x 2 x double> [[VP_OP_LOAD113]], <vscale x 2 x i1> [[VP_MASK_SELECT105]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP122:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD114]], <vscale x 2 x double> [[VP_OP_LOAD114]], <vscale x 2 x i1> [[VP_MASK_SELECT106]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP123:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD115]], <vscale x 2 x double> [[VP_OP_LOAD115]], <vscale x 2 x i1> [[VP_MASK_SELECT107]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP124:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD116]], <vscale x 2 x double> [[VP_OP_LOAD116]], <vscale x 2 x i1> [[VP_MASK_SELECT108]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP125:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD117]], <vscale x 2 x double> [[VP_OP_LOAD117]], <vscale x 2 x i1> [[VP_MASK_SELECT109]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP126:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD118]], <vscale x 2 x double> [[VP_OP_LOAD118]], <vscale x 2 x i1> [[VP_MASK_SELECT110]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP127:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD119]], <vscale x 2 x double> [[VP_OP_LOAD119]], <vscale x 2 x i1> [[VP_MASK_SELECT111]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT128:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT65]], <vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT129:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT66]], <vscale x 2 x i1> [[VP_OP_SELECT83]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT130:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT67]], <vscale x 2 x i1> [[VP_OP_SELECT85]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT131:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT68]], <vscale x 2 x i1> [[VP_OP_SELECT87]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT132:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT69]], <vscale x 2 x i1> [[VP_OP_SELECT89]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT133:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT70]], <vscale x 2 x i1> [[VP_OP_SELECT91]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT134:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT71]], <vscale x 2 x i1> [[VP_OP_SELECT93]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT135:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_OP_SELECT95]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT104]], <vscale x 2 x double> [[VP_OP120]], <vscale x 2 x double> [[VP_OP]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI136:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT105]], <vscale x 2 x double> [[VP_OP121]], <vscale x 2 x double> [[VP_OP58]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI137:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT106]], <vscale x 2 x double> [[VP_OP122]], <vscale x 2 x double> [[VP_OP59]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI138:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT107]], <vscale x 2 x double> [[VP_OP123]], <vscale x 2 x double> [[VP_OP60]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI139:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT108]], <vscale x 2 x double> [[VP_OP124]], <vscale x 2 x double> [[VP_OP61]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI140:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT109]], <vscale x 2 x double> [[VP_OP125]], <vscale x 2 x double> [[VP_OP62]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI141:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT110]], <vscale x 2 x double> [[VP_OP126]], <vscale x 2 x double> [[VP_OP63]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI142:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT111]], <vscale x 2 x double> [[VP_OP127]], <vscale x 2 x double> [[VP_OP64]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI143:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT128]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI144:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT129]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI136]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI145:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT130]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI137]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI146:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT131]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI138]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI147:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT132]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI139]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI148:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT133]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI140]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI149:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT134]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI141]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI150:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT135]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI142]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP240:%.*]] = getelementptr inbounds double, double* [[A:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_OR:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT104]], <vscale x 2 x i1> [[VP_MASK_SELECT128]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR151:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT105]], <vscale x 2 x i1> [[VP_MASK_SELECT129]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR152:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT106]], <vscale x 2 x i1> [[VP_MASK_SELECT130]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR153:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT107]], <vscale x 2 x i1> [[VP_MASK_SELECT131]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR154:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT108]], <vscale x 2 x i1> [[VP_MASK_SELECT132]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR155:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT109]], <vscale x 2 x i1> [[VP_MASK_SELECT133]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR156:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT110]], <vscale x 2 x i1> [[VP_MASK_SELECT134]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR157:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT111]], <vscale x 2 x i1> [[VP_MASK_SELECT135]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR158:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR]], <vscale x 2 x i1> [[VP_MASK_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR159:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR151]], <vscale x 2 x i1> [[VP_MASK_SELECT43]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR160:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR152]], <vscale x 2 x i1> [[VP_MASK_SELECT44]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR161:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR153]], <vscale x 2 x i1> [[VP_MASK_SELECT45]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR162:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR154]], <vscale x 2 x i1> [[VP_MASK_SELECT46]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR163:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR155]], <vscale x 2 x i1> [[VP_MASK_SELECT47]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR164:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR156]], <vscale x 2 x i1> [[VP_MASK_SELECT48]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR165:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR157]], <vscale x 2 x i1> [[VP_MASK_SELECT49]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP241:%.*]] = bitcast double* [[TMP240]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI143]], <vscale x 2 x double>* [[TMP241]], <vscale x 2 x i1> [[VP_MASK_OR158]], i32 [[TMP35]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP242:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP243:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP242]]
; INTERLEAVE-NEXT:    [[TMP244:%.*]] = bitcast double* [[TMP243]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI144]], <vscale x 2 x double>* [[TMP244]], <vscale x 2 x i1> [[VP_MASK_OR159]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP245:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP246:%.*]] = sext i32 [[TMP245]] to i64
; INTERLEAVE-NEXT:    [[TMP247:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP246]]
; INTERLEAVE-NEXT:    [[TMP248:%.*]] = bitcast double* [[TMP247]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI145]], <vscale x 2 x double>* [[TMP248]], <vscale x 2 x i1> [[VP_MASK_OR160]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP249:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP250:%.*]] = add i32 [[TMP249]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP251:%.*]] = sext i32 [[TMP250]] to i64
; INTERLEAVE-NEXT:    [[TMP252:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP251]]
; INTERLEAVE-NEXT:    [[TMP253:%.*]] = bitcast double* [[TMP252]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI146]], <vscale x 2 x double>* [[TMP253]], <vscale x 2 x i1> [[VP_MASK_OR161]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP254:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP255:%.*]] = add i32 [[TMP254]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP256:%.*]] = add i32 [[TMP255]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP257:%.*]] = sext i32 [[TMP256]] to i64
; INTERLEAVE-NEXT:    [[TMP258:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP257]]
; INTERLEAVE-NEXT:    [[TMP259:%.*]] = bitcast double* [[TMP258]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI147]], <vscale x 2 x double>* [[TMP259]], <vscale x 2 x i1> [[VP_MASK_OR162]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP260:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP261:%.*]] = add i32 [[TMP260]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP262:%.*]] = add i32 [[TMP261]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP263:%.*]] = add i32 [[TMP262]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP264:%.*]] = sext i32 [[TMP263]] to i64
; INTERLEAVE-NEXT:    [[TMP265:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP264]]
; INTERLEAVE-NEXT:    [[TMP266:%.*]] = bitcast double* [[TMP265]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI148]], <vscale x 2 x double>* [[TMP266]], <vscale x 2 x i1> [[VP_MASK_OR163]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP267:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP268:%.*]] = add i32 [[TMP267]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP269:%.*]] = add i32 [[TMP268]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP270:%.*]] = add i32 [[TMP269]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP271:%.*]] = add i32 [[TMP270]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP272:%.*]] = sext i32 [[TMP271]] to i64
; INTERLEAVE-NEXT:    [[TMP273:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP272]]
; INTERLEAVE-NEXT:    [[TMP274:%.*]] = bitcast double* [[TMP273]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI149]], <vscale x 2 x double>* [[TMP274]], <vscale x 2 x i1> [[VP_MASK_OR164]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP275:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP276:%.*]] = add i32 [[TMP275]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP277:%.*]] = add i32 [[TMP276]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP278:%.*]] = add i32 [[TMP277]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP279:%.*]] = add i32 [[TMP278]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP280:%.*]] = add i32 [[TMP279]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP281:%.*]] = sext i32 [[TMP280]] to i64
; INTERLEAVE-NEXT:    [[TMP282:%.*]] = getelementptr inbounds double, double* [[TMP240]], i64 [[TMP281]]
; INTERLEAVE-NEXT:    [[TMP283:%.*]] = bitcast double* [[TMP282]] to <vscale x 2 x double>*
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> [[VP_PREDPHI150]], <vscale x 2 x double>* [[TMP283]], <vscale x 2 x i1> [[VP_MASK_OR165]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP284:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP285:%.*]] = add i32 [[TMP284]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP286:%.*]] = add i32 [[TMP285]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP287:%.*]] = add i32 [[TMP286]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP288:%.*]] = add i32 [[TMP287]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP289:%.*]] = add i32 [[TMP288]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP290:%.*]] = add i32 [[TMP289]], [[TMP56]]
; INTERLEAVE-NEXT:    [[TMP291:%.*]] = zext i32 [[TMP290]] to i64
; INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP291]]
; INTERLEAVE-NEXT:    [[TMP292:%.*]] = icmp eq i64 [[INDEX_NEXT]], [[WIDE_TRIP_COUNT]]
; INTERLEAVE-NEXT:    br i1 [[TMP292]], label [[FOR_COND_CLEANUP]], label [[VECTOR_BODY]], !llvm.loop [[LOOP12:![0-9]+]]
; INTERLEAVE:       for.cond.cleanup:
; INTERLEAVE-NEXT:    ret void
; INTERLEAVE:       for.body:
; INTERLEAVE-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_INC:%.*]] ], [ 0, [[FOR_BODY_PREHEADER]] ]
; INTERLEAVE-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds i32, i32* [[M]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP293:%.*]] = load i32, i32* [[ARRAYIDX]], align 4, !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i32 [[TMP293]], 0
; INTERLEAVE-NEXT:    br i1 [[TOBOOL_NOT]], label [[IF_ELSE:%.*]], label [[IF_THEN:%.*]]
; INTERLEAVE:       if.then:
; INTERLEAVE-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds double, double* [[B]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP294:%.*]] = load double, double* [[ARRAYIDX2]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[MUL:%.*]] = fmul double [[TMP294]], [[TMP294]]
; INTERLEAVE-NEXT:    br label [[FOR_INC]]
; INTERLEAVE:       if.else:
; INTERLEAVE-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds i32*, i32** [[W]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP295:%.*]] = load i32*, i32** [[ARRAYIDX8]], align 8, !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TOBOOL9_NOT:%.*]] = icmp eq i32* [[TMP295]], null
; INTERLEAVE-NEXT:    br i1 [[TOBOOL9_NOT]], label [[FOR_INC]], label [[IF_THEN10:%.*]]
; INTERLEAVE:       if.then10:
; INTERLEAVE-NEXT:    [[ARRAYIDX12:%.*]] = getelementptr inbounds double, double* [[B]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP296:%.*]] = load double, double* [[ARRAYIDX12]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[ADD:%.*]] = fadd double [[TMP296]], [[TMP296]]
; INTERLEAVE-NEXT:    br label [[FOR_INC]]
; INTERLEAVE:       for.inc:
; INTERLEAVE-NEXT:    [[MUL_SINK:%.*]] = phi double [ [[MUL]], [[IF_THEN]] ], [ [[ADD]], [[IF_THEN10]] ], [ 3.000000e+00, [[IF_ELSE]] ]
; INTERLEAVE-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds double, double* [[A]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    store double [[MUL_SINK]], double* [[ARRAYIDX6]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; INTERLEAVE-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], [[WIDE_TRIP_COUNT]]
; INTERLEAVE-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP16:![0-9]+]]
;
entry:
  %cmp37 = icmp sgt i32 %n, 0
  br i1 %cmp37, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.inc
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i32, i32* %m, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx2 = getelementptr inbounds double, double* %b, i64 %indvars.iv
  %1 = load double, double* %arrayidx2, align 8, !tbaa !8
  %mul = fmul double %1, %1
  br label %for.inc

if.else:                                          ; preds = %for.body
  %arrayidx8 = getelementptr inbounds i32*, i32** %w, i64 %indvars.iv
  %2 = load i32*, i32** %arrayidx8, align 8, !tbaa !10
  %tobool9.not = icmp eq i32* %2, null
  br i1 %tobool9.not, label %for.inc, label %if.then10

if.then10:                                        ; preds = %if.else
  %arrayidx12 = getelementptr inbounds double, double* %b, i64 %indvars.iv
  %3 = load double, double* %arrayidx12, align 8, !tbaa !8
  %add = fadd double %3, %3
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then, %if.then10
  %mul.sink = phi double [ %mul, %if.then ], [ %add, %if.then10 ], [ 3.000000e+00, %if.else ]
  %arrayidx6 = getelementptr inbounds double, double* %a, i64 %indvars.iv
  store double %mul.sink, double* %arrayidx6, align 8, !tbaa !8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !12
}

attributes #0 = { argmemonly nofree norecurse nosync nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-features"="+64bit,+a,+c,+d,+f,+m,+zepi,+zve32f,+zve32x,+zve64d,+zve64f,+zve64x,+zvl32b,+zvl64b,-relax,-save-restore" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"target-abi", !"lp64d"}
!2 = !{i32 1, !"SmallDataLimit", i32 8}
!3 = !{!"clang version 15.0.0"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"double", !6, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !6, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
