; NOTE: Assertions have been autogenerated by utils/update_test_checks.py
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi -riscv-v-vector-bits-min=64 \
; RUN:    -scalable-vectorization=only \
; RUN:    -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -O2 < %s  -o - | FileCheck %s --check-prefix=CHECK
; RUN: opt -mtriple riscv64 -mattr +m,+a,+f,+d,+zepi -riscv-v-vector-bits-min=64 \
; RUN:    -scalable-vectorization=only -interleave-no-scalar-epilogue=true \
; RUN:    -prefer-predicate-over-epilogue=predicate-dont-vectorize \
; RUN:    -S -O2 < %s  -o - | FileCheck %s --check-prefix=INTERLEAVE

; Function Attrs: argmemonly nofree norecurse nosync nounwind
define dso_local void @fu(double* noalias nocapture noundef writeonly %a, double* noalias nocapture noundef readonly %b, i32 noundef signext %n, i32* noalias nocapture noundef readonly %m, i32** nocapture noundef readonly %w) local_unnamed_addr #0 {
; CHECK-LABEL: @fu(
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[CMP37:%.*]] = icmp sgt i32 [[N:%.*]], 0
; CHECK-NEXT:    br i1 [[CMP37]], label [[FOR_BODY_PREHEADER:%.*]], label [[FOR_COND_CLEANUP:%.*]]
; CHECK:       for.body.preheader:
; CHECK-NEXT:    [[WIDE_TRIP_COUNT:%.*]] = zext i32 [[N]] to i64
; CHECK-NEXT:    [[TMP0:%.*]] = xor i64 [[WIDE_TRIP_COUNT]], -1
; CHECK-NEXT:    [[TMP1:%.*]] = tail call i64 @llvm.vscale.i64()
; CHECK-NEXT:    [[TMP2:%.*]] = shl i64 [[TMP1]], 1
; CHECK-NEXT:    [[TMP3:%.*]] = icmp ugt i64 [[TMP2]], [[TMP0]]
; CHECK-NEXT:    br i1 [[TMP3]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; CHECK:       vector.ph:
; CHECK-NEXT:    [[TRIP_COUNT_MINUS_1:%.*]] = add nsw i64 [[WIDE_TRIP_COUNT]], -1
; CHECK-NEXT:    [[BROADCAST_SPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TRIP_COUNT_MINUS_1]], i64 0
; CHECK-NEXT:    [[BROADCAST_SPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; CHECK-NEXT:    [[TMP4:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; CHECK-NEXT:    br label [[VECTOR_BODY:%.*]]
; CHECK:       vector.body:
; CHECK-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; CHECK-NEXT:    [[TMP5:%.*]] = sub i64 [[WIDE_TRIP_COUNT]], [[INDEX]]
; CHECK-NEXT:    [[TMP6:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP5]], i64 3, i64 1)
; CHECK-NEXT:    [[TMP7:%.*]] = trunc i64 [[TMP6]] to i32
; CHECK-NEXT:    [[BROADCAST_SPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[INDEX]], i64 0
; CHECK-NEXT:    [[BROADCAST_SPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; CHECK-NEXT:    [[VEC_IV:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP4]]
; CHECK-NEXT:    [[VP_ICMP_ULE:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP8:%.*]] = getelementptr inbounds i32, ptr [[M:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_OP_LOAD:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP8]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]]), !tbaa [[TBAA4:![0-9]+]]
; CHECK-NEXT:    [[VP_OP_ICMP:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[TMP9:%.*]] = getelementptr inbounds double, ptr [[B:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_NOT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE]], <vscale x 2 x i1> [[VP_MASK_NOT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_OP_LOAD3:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP9]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP7]]), !tbaa [[TBAA8:![0-9]+]]
; CHECK-NEXT:    [[VP_OP:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD3]], <vscale x 2 x double> [[VP_OP_LOAD3]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP7]])
; CHECK-NEXT:    [[TMP10:%.*]] = getelementptr inbounds ptr, ptr [[W:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_SELECT4:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE]], <vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_OP_LOAD5:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP10]], <vscale x 2 x i1> [[VP_MASK_SELECT4]], i32 [[TMP7]]), !tbaa [[TBAA10:![0-9]+]]
; CHECK-NEXT:    [[VP_OP_ICMP6:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD5]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT4]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_OP_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_OP_ICMP6]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_NOT7:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT8:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_MASK_NOT7]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_OP_LOAD9:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP9]], <vscale x 2 x i1> [[VP_MASK_SELECT8]], i32 [[TMP7]]), !tbaa [[TBAA8]]
; CHECK-NEXT:    [[VP_OP10:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD9]], <vscale x 2 x double> [[VP_OP_LOAD9]], <vscale x 2 x i1> [[VP_MASK_SELECT8]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_SELECT11:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT4]], <vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_PREDPHI:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT8]], <vscale x 2 x double> [[VP_OP10]], <vscale x 2 x double> [[VP_OP]], i32 [[TMP7]])
; CHECK-NEXT:    [[VP_PREDPHI12:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT11]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI]], i32 [[TMP7]])
; CHECK-NEXT:    [[TMP11:%.*]] = getelementptr inbounds double, ptr [[A:%.*]], i64 [[INDEX]]
; CHECK-NEXT:    [[VP_MASK_OR:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT8]], <vscale x 2 x i1> [[VP_MASK_SELECT11]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    [[VP_MASK_OR13:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR]], <vscale x 2 x i1> [[VP_MASK_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP7]])
; CHECK-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI12]], ptr [[TMP11]], <vscale x 2 x i1> [[VP_MASK_OR13]], i32 [[TMP7]]), !tbaa [[TBAA8]]
; CHECK-NEXT:    [[TMP12:%.*]] = and i64 [[TMP6]], 4294967295
; CHECK-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP12]]
; CHECK-NEXT:    [[TMP13:%.*]] = icmp eq i64 [[INDEX_NEXT]], [[WIDE_TRIP_COUNT]]
; CHECK-NEXT:    br i1 [[TMP13]], label [[FOR_COND_CLEANUP]], label [[VECTOR_BODY]], !llvm.loop [[LOOP12:![0-9]+]]
; CHECK:       for.cond.cleanup:
; CHECK-NEXT:    ret void
; CHECK:       for.body:
; CHECK-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_INC:%.*]] ], [ 0, [[FOR_BODY_PREHEADER]] ]
; CHECK-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds i32, ptr [[M]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP14:%.*]] = load i32, ptr [[ARRAYIDX]], align 4, !tbaa [[TBAA4]]
; CHECK-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i32 [[TMP14]], 0
; CHECK-NEXT:    br i1 [[TOBOOL_NOT]], label [[IF_ELSE:%.*]], label [[IF_THEN:%.*]]
; CHECK:       if.then:
; CHECK-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds double, ptr [[B]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP15:%.*]] = load double, ptr [[ARRAYIDX2]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[MUL:%.*]] = fmul double [[TMP15]], [[TMP15]]
; CHECK-NEXT:    br label [[FOR_INC]]
; CHECK:       if.else:
; CHECK-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds ptr, ptr [[W]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP16:%.*]] = load ptr, ptr [[ARRAYIDX8]], align 8, !tbaa [[TBAA10]]
; CHECK-NEXT:    [[TOBOOL9_NOT:%.*]] = icmp eq ptr [[TMP16]], null
; CHECK-NEXT:    br i1 [[TOBOOL9_NOT]], label [[FOR_INC]], label [[IF_THEN10:%.*]]
; CHECK:       if.then10:
; CHECK-NEXT:    [[ARRAYIDX12:%.*]] = getelementptr inbounds double, ptr [[B]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    [[TMP17:%.*]] = load double, ptr [[ARRAYIDX12]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[ADD:%.*]] = fadd double [[TMP17]], [[TMP17]]
; CHECK-NEXT:    br label [[FOR_INC]]
; CHECK:       for.inc:
; CHECK-NEXT:    [[MUL_SINK:%.*]] = phi double [ [[MUL]], [[IF_THEN]] ], [ [[ADD]], [[IF_THEN10]] ], [ 3.000000e+00, [[IF_ELSE]] ]
; CHECK-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds double, ptr [[A]], i64 [[INDVARS_IV]]
; CHECK-NEXT:    store double [[MUL_SINK]], ptr [[ARRAYIDX6]], align 8, !tbaa [[TBAA8]]
; CHECK-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; CHECK-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], [[WIDE_TRIP_COUNT]]
; CHECK-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP16:![0-9]+]]
;
; INTERLEAVE-LABEL: @fu(
; INTERLEAVE-NEXT:  entry:
; INTERLEAVE-NEXT:    [[CMP37:%.*]] = icmp sgt i32 [[N:%.*]], 0
; INTERLEAVE-NEXT:    br i1 [[CMP37]], label [[FOR_BODY_PREHEADER:%.*]], label [[FOR_COND_CLEANUP:%.*]]
; INTERLEAVE:       for.body.preheader:
; INTERLEAVE-NEXT:    [[WIDE_TRIP_COUNT:%.*]] = zext i32 [[N]] to i64
; INTERLEAVE-NEXT:    [[TMP0:%.*]] = xor i64 [[WIDE_TRIP_COUNT]], -1
; INTERLEAVE-NEXT:    [[TMP1:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP2:%.*]] = shl i64 [[TMP1]], 4
; INTERLEAVE-NEXT:    [[TMP3:%.*]] = icmp ugt i64 [[TMP2]], [[TMP0]]
; INTERLEAVE-NEXT:    br i1 [[TMP3]], label [[FOR_BODY:%.*]], label [[VECTOR_PH:%.*]]
; INTERLEAVE:       vector.ph:
; INTERLEAVE-NEXT:    [[TRIP_COUNT_MINUS_1:%.*]] = add nsw i64 [[WIDE_TRIP_COUNT]], -1
; INTERLEAVE-NEXT:    [[BROADCAST_SPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TRIP_COUNT_MINUS_1]], i64 0
; INTERLEAVE-NEXT:    [[BROADCAST_SPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP4:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP5:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP6:%.*]] = shl i64 [[TMP5]], 1
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP6]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP7:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP8:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT]], [[TMP7]]
; INTERLEAVE-NEXT:    [[TMP9:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP10:%.*]] = shl i64 [[TMP9]], 2
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT4:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP10]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT5:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT4]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP11:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP12:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT5]], [[TMP11]]
; INTERLEAVE-NEXT:    [[TMP13:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP14:%.*]] = mul i64 [[TMP13]], 6
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT7:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP14]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT8:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT7]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP15:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP16:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT8]], [[TMP15]]
; INTERLEAVE-NEXT:    [[TMP17:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP18:%.*]] = shl i64 [[TMP17]], 3
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT10:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP18]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT11:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT10]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP19:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP20:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT11]], [[TMP19]]
; INTERLEAVE-NEXT:    [[TMP21:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP22:%.*]] = mul i64 [[TMP21]], 10
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT13:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP22]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT14:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT13]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP23:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP24:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT14]], [[TMP23]]
; INTERLEAVE-NEXT:    [[TMP25:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP26:%.*]] = mul i64 [[TMP25]], 12
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT16:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP26]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT17:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT16]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP27:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP28:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT17]], [[TMP27]]
; INTERLEAVE-NEXT:    [[TMP29:%.*]] = tail call i64 @llvm.vscale.i64()
; INTERLEAVE-NEXT:    [[TMP30:%.*]] = mul i64 [[TMP29]], 14
; INTERLEAVE-NEXT:    [[DOTSPLATINSERT19:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[TMP30]], i64 0
; INTERLEAVE-NEXT:    [[DOTSPLAT20:%.*]] = shufflevector <vscale x 2 x i64> [[DOTSPLATINSERT19]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[TMP31:%.*]] = tail call <vscale x 2 x i64> @llvm.experimental.stepvector.nxv2i64()
; INTERLEAVE-NEXT:    [[TMP32:%.*]] = add <vscale x 2 x i64> [[DOTSPLAT20]], [[TMP31]]
; INTERLEAVE-NEXT:    br label [[VECTOR_BODY:%.*]]
; INTERLEAVE:       vector.body:
; INTERLEAVE-NEXT:    [[INDEX:%.*]] = phi i64 [ 0, [[VECTOR_PH]] ], [ [[INDEX_NEXT:%.*]], [[VECTOR_BODY]] ]
; INTERLEAVE-NEXT:    [[TMP33:%.*]] = sub i64 [[WIDE_TRIP_COUNT]], [[INDEX]]
; INTERLEAVE-NEXT:    [[TMP34:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP33]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP35:%.*]] = trunc i64 [[TMP34]] to i32
; INTERLEAVE-NEXT:    [[TMP36:%.*]] = sub i64 [[TMP33]], [[TMP34]]
; INTERLEAVE-NEXT:    [[TMP37:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP36]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP38:%.*]] = trunc i64 [[TMP37]] to i32
; INTERLEAVE-NEXT:    [[TMP39:%.*]] = sub i64 [[TMP36]], [[TMP37]]
; INTERLEAVE-NEXT:    [[TMP40:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP39]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP41:%.*]] = trunc i64 [[TMP40]] to i32
; INTERLEAVE-NEXT:    [[TMP42:%.*]] = sub i64 [[TMP39]], [[TMP40]]
; INTERLEAVE-NEXT:    [[TMP43:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP42]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP44:%.*]] = trunc i64 [[TMP43]] to i32
; INTERLEAVE-NEXT:    [[TMP45:%.*]] = sub i64 [[TMP42]], [[TMP43]]
; INTERLEAVE-NEXT:    [[TMP46:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP45]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP47:%.*]] = trunc i64 [[TMP46]] to i32
; INTERLEAVE-NEXT:    [[TMP48:%.*]] = sub i64 [[TMP45]], [[TMP46]]
; INTERLEAVE-NEXT:    [[TMP49:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP48]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP50:%.*]] = trunc i64 [[TMP49]] to i32
; INTERLEAVE-NEXT:    [[TMP51:%.*]] = sub i64 [[TMP48]], [[TMP49]]
; INTERLEAVE-NEXT:    [[TMP52:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP51]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP53:%.*]] = trunc i64 [[TMP52]] to i32
; INTERLEAVE-NEXT:    [[TMP54:%.*]] = sub i64 [[TMP51]], [[TMP52]]
; INTERLEAVE-NEXT:    [[TMP55:%.*]] = tail call i64 @llvm.epi.vsetvl(i64 [[TMP54]], i64 3, i64 1)
; INTERLEAVE-NEXT:    [[TMP56:%.*]] = trunc i64 [[TMP55]] to i32
; INTERLEAVE-NEXT:    [[BROADCAST_SPLATINSERT1:%.*]] = insertelement <vscale x 2 x i64> poison, i64 [[INDEX]], i64 0
; INTERLEAVE-NEXT:    [[BROADCAST_SPLAT2:%.*]] = shufflevector <vscale x 2 x i64> [[BROADCAST_SPLATINSERT1]], <vscale x 2 x i64> poison, <vscale x 2 x i32> zeroinitializer
; INTERLEAVE-NEXT:    [[VEC_IV:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP4]]
; INTERLEAVE-NEXT:    [[VEC_IV3:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP8]]
; INTERLEAVE-NEXT:    [[VEC_IV6:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP12]]
; INTERLEAVE-NEXT:    [[VEC_IV9:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP16]]
; INTERLEAVE-NEXT:    [[VEC_IV12:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP20]]
; INTERLEAVE-NEXT:    [[VEC_IV15:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP24]]
; INTERLEAVE-NEXT:    [[VEC_IV18:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP28]]
; INTERLEAVE-NEXT:    [[VEC_IV21:%.*]] = add <vscale x 2 x i64> [[BROADCAST_SPLAT2]], [[TMP32]]
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE22:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV3]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE23:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV6]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE24:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV9]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE25:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV12]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE26:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV15]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE27:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV18]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_ICMP_ULE28:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i64(<vscale x 2 x i64> [[VEC_IV21]], <vscale x 2 x i64> [[BROADCAST_SPLAT]], metadata !"ule", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP57:%.*]] = getelementptr inbounds i32, ptr [[M:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP57]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]]), !tbaa [[TBAA4:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP58:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP59:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP58]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD29:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP59]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP60:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP61:%.*]] = sext i32 [[TMP60]] to i64
; INTERLEAVE-NEXT:    [[TMP62:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP61]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD30:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP62]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP63:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP64:%.*]] = add i32 [[TMP63]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP65:%.*]] = sext i32 [[TMP64]] to i64
; INTERLEAVE-NEXT:    [[TMP66:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP65]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD31:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP66]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP67:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP68:%.*]] = add i32 [[TMP67]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP69:%.*]] = add i32 [[TMP68]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP70:%.*]] = sext i32 [[TMP69]] to i64
; INTERLEAVE-NEXT:    [[TMP71:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP70]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD32:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP71]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP72:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP73:%.*]] = add i32 [[TMP72]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP74:%.*]] = add i32 [[TMP73]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP75:%.*]] = add i32 [[TMP74]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP76:%.*]] = sext i32 [[TMP75]] to i64
; INTERLEAVE-NEXT:    [[TMP77:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP76]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD33:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP77]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP78:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP79:%.*]] = add i32 [[TMP78]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP80:%.*]] = add i32 [[TMP79]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP81:%.*]] = add i32 [[TMP80]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP82:%.*]] = add i32 [[TMP81]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP83:%.*]] = sext i32 [[TMP82]] to i64
; INTERLEAVE-NEXT:    [[TMP84:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP83]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD34:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP84]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TMP85:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP86:%.*]] = add i32 [[TMP85]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP87:%.*]] = add i32 [[TMP86]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP88:%.*]] = add i32 [[TMP87]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP89:%.*]] = add i32 [[TMP88]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP90:%.*]] = add i32 [[TMP89]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP91:%.*]] = sext i32 [[TMP90]] to i64
; INTERLEAVE-NEXT:    [[TMP92:%.*]] = getelementptr inbounds i32, ptr [[TMP57]], i64 [[TMP91]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD35:%.*]] = tail call <vscale x 2 x i32> @llvm.vp.load.nxv2i32.p0(ptr [[TMP92]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]]), !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[VP_OP_ICMP:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP36:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD29]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP37:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD30]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP38:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD31]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP39:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD32]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP40:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD33]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP41:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD34]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP42:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2i32(<vscale x 2 x i32> [[VP_OP_LOAD35]], <vscale x 2 x i32> zeroinitializer, metadata !"eq", <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP93:%.*]] = getelementptr inbounds double, ptr [[B:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_NOT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT43:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP36]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT44:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP37]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT45:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP38]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT46:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP39]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT47:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP40]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT48:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP41]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT49:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_ICMP42]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE]], <vscale x 2 x i1> [[VP_MASK_NOT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT50:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE22]], <vscale x 2 x i1> [[VP_MASK_NOT43]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT51:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE23]], <vscale x 2 x i1> [[VP_MASK_NOT44]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT52:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE24]], <vscale x 2 x i1> [[VP_MASK_NOT45]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT53:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE25]], <vscale x 2 x i1> [[VP_MASK_NOT46]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT54:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE26]], <vscale x 2 x i1> [[VP_MASK_NOT47]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT55:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE27]], <vscale x 2 x i1> [[VP_MASK_NOT48]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT56:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE28]], <vscale x 2 x i1> [[VP_MASK_NOT49]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_OP_LOAD57:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP93]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP35]]), !tbaa [[TBAA8:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP94:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP95:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP94]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD58:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP95]], <vscale x 2 x i1> [[VP_MASK_SELECT50]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP96:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP97:%.*]] = sext i32 [[TMP96]] to i64
; INTERLEAVE-NEXT:    [[TMP98:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP97]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD59:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP98]], <vscale x 2 x i1> [[VP_MASK_SELECT51]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP99:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP100:%.*]] = add i32 [[TMP99]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP101:%.*]] = sext i32 [[TMP100]] to i64
; INTERLEAVE-NEXT:    [[TMP102:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP101]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD60:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP102]], <vscale x 2 x i1> [[VP_MASK_SELECT52]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP103:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP104:%.*]] = add i32 [[TMP103]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP105:%.*]] = add i32 [[TMP104]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP106:%.*]] = sext i32 [[TMP105]] to i64
; INTERLEAVE-NEXT:    [[TMP107:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP106]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD61:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP107]], <vscale x 2 x i1> [[VP_MASK_SELECT53]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP108:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP109:%.*]] = add i32 [[TMP108]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP110:%.*]] = add i32 [[TMP109]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP111:%.*]] = add i32 [[TMP110]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP112:%.*]] = sext i32 [[TMP111]] to i64
; INTERLEAVE-NEXT:    [[TMP113:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP112]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD62:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP113]], <vscale x 2 x i1> [[VP_MASK_SELECT54]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP114:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP115:%.*]] = add i32 [[TMP114]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP116:%.*]] = add i32 [[TMP115]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP117:%.*]] = add i32 [[TMP116]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP118:%.*]] = add i32 [[TMP117]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP119:%.*]] = sext i32 [[TMP118]] to i64
; INTERLEAVE-NEXT:    [[TMP120:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP119]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD63:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP120]], <vscale x 2 x i1> [[VP_MASK_SELECT55]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP121:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP122:%.*]] = add i32 [[TMP121]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP123:%.*]] = add i32 [[TMP122]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP124:%.*]] = add i32 [[TMP123]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP125:%.*]] = add i32 [[TMP124]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP126:%.*]] = add i32 [[TMP125]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP127:%.*]] = sext i32 [[TMP126]] to i64
; INTERLEAVE-NEXT:    [[TMP128:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP127]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD64:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP128]], <vscale x 2 x i1> [[VP_MASK_SELECT56]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[VP_OP:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD57]], <vscale x 2 x double> [[VP_OP_LOAD57]], <vscale x 2 x i1> [[VP_MASK_SELECT]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP65:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD58]], <vscale x 2 x double> [[VP_OP_LOAD58]], <vscale x 2 x i1> [[VP_MASK_SELECT50]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP66:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD59]], <vscale x 2 x double> [[VP_OP_LOAD59]], <vscale x 2 x i1> [[VP_MASK_SELECT51]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP67:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD60]], <vscale x 2 x double> [[VP_OP_LOAD60]], <vscale x 2 x i1> [[VP_MASK_SELECT52]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP68:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD61]], <vscale x 2 x double> [[VP_OP_LOAD61]], <vscale x 2 x i1> [[VP_MASK_SELECT53]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP69:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD62]], <vscale x 2 x double> [[VP_OP_LOAD62]], <vscale x 2 x i1> [[VP_MASK_SELECT54]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP70:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD63]], <vscale x 2 x double> [[VP_OP_LOAD63]], <vscale x 2 x i1> [[VP_MASK_SELECT55]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP71:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fmul.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD64]], <vscale x 2 x double> [[VP_OP_LOAD64]], <vscale x 2 x i1> [[VP_MASK_SELECT56]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP129:%.*]] = getelementptr inbounds ptr, ptr [[W:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT72:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE]], <vscale x 2 x i1> [[VP_OP_ICMP]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT73:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE22]], <vscale x 2 x i1> [[VP_OP_ICMP36]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT74:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE23]], <vscale x 2 x i1> [[VP_OP_ICMP37]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT75:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE24]], <vscale x 2 x i1> [[VP_OP_ICMP38]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT76:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE25]], <vscale x 2 x i1> [[VP_OP_ICMP39]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT77:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE26]], <vscale x 2 x i1> [[VP_OP_ICMP40]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT78:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE27]], <vscale x 2 x i1> [[VP_OP_ICMP41]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT79:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_ICMP_ULE28]], <vscale x 2 x i1> [[VP_OP_ICMP42]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_OP_LOAD80:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP129]], <vscale x 2 x i1> [[VP_MASK_SELECT72]], i32 [[TMP35]]), !tbaa [[TBAA10:![0-9]+]]
; INTERLEAVE-NEXT:    [[TMP130:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP131:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP130]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD81:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP131]], <vscale x 2 x i1> [[VP_MASK_SELECT73]], i32 [[TMP38]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP132:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP133:%.*]] = sext i32 [[TMP132]] to i64
; INTERLEAVE-NEXT:    [[TMP134:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP133]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD82:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP134]], <vscale x 2 x i1> [[VP_MASK_SELECT74]], i32 [[TMP41]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP135:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP136:%.*]] = add i32 [[TMP135]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP137:%.*]] = sext i32 [[TMP136]] to i64
; INTERLEAVE-NEXT:    [[TMP138:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP137]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD83:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP138]], <vscale x 2 x i1> [[VP_MASK_SELECT75]], i32 [[TMP44]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP139:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP140:%.*]] = add i32 [[TMP139]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP141:%.*]] = add i32 [[TMP140]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP142:%.*]] = sext i32 [[TMP141]] to i64
; INTERLEAVE-NEXT:    [[TMP143:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP142]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD84:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP143]], <vscale x 2 x i1> [[VP_MASK_SELECT76]], i32 [[TMP47]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP144:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP145:%.*]] = add i32 [[TMP144]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP146:%.*]] = add i32 [[TMP145]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP147:%.*]] = add i32 [[TMP146]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP148:%.*]] = sext i32 [[TMP147]] to i64
; INTERLEAVE-NEXT:    [[TMP149:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP148]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD85:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP149]], <vscale x 2 x i1> [[VP_MASK_SELECT77]], i32 [[TMP50]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP150:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP151:%.*]] = add i32 [[TMP150]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP152:%.*]] = add i32 [[TMP151]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP153:%.*]] = add i32 [[TMP152]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP154:%.*]] = add i32 [[TMP153]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP155:%.*]] = sext i32 [[TMP154]] to i64
; INTERLEAVE-NEXT:    [[TMP156:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP155]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD86:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP156]], <vscale x 2 x i1> [[VP_MASK_SELECT78]], i32 [[TMP53]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TMP157:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP158:%.*]] = add i32 [[TMP157]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP159:%.*]] = add i32 [[TMP158]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP160:%.*]] = add i32 [[TMP159]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP161:%.*]] = add i32 [[TMP160]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP162:%.*]] = add i32 [[TMP161]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP163:%.*]] = sext i32 [[TMP162]] to i64
; INTERLEAVE-NEXT:    [[TMP164:%.*]] = getelementptr inbounds ptr, ptr [[TMP129]], i64 [[TMP163]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD87:%.*]] = tail call <vscale x 2 x ptr> @llvm.vp.load.nxv2p0.p0(ptr [[TMP164]], <vscale x 2 x i1> [[VP_MASK_SELECT79]], i32 [[TMP56]]), !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[VP_OP_ICMP88:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD80]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT72]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_OP_ICMP88]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP89:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD81]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT73]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT90:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT73]], <vscale x 2 x i1> [[VP_OP_ICMP89]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP91:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD82]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT74]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT92:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT74]], <vscale x 2 x i1> [[VP_OP_ICMP91]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP93:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD83]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT75]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT94:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT75]], <vscale x 2 x i1> [[VP_OP_ICMP93]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP95:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD84]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT76]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT96:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT76]], <vscale x 2 x i1> [[VP_OP_ICMP95]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP97:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD85]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT77]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT98:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT77]], <vscale x 2 x i1> [[VP_OP_ICMP97]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP99:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD86]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT78]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT100:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT78]], <vscale x 2 x i1> [[VP_OP_ICMP99]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP_ICMP101:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.icmp.nxv2p0(<vscale x 2 x ptr> [[VP_OP_LOAD87]], <vscale x 2 x ptr> zeroinitializer, metadata !"eq", <vscale x 2 x i1> [[VP_MASK_SELECT79]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_OP_SELECT102:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT79]], <vscale x 2 x i1> [[VP_OP_ICMP101]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT103:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT104:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT90]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT105:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT92]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT106:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT94]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT107:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT96]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT108:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT98]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT109:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT100]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_NOT110:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.xor.nxv2i1(<vscale x 2 x i1> [[VP_OP_SELECT102]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT111:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_MASK_NOT103]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT112:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT73]], <vscale x 2 x i1> [[VP_MASK_NOT104]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT113:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT74]], <vscale x 2 x i1> [[VP_MASK_NOT105]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT114:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT75]], <vscale x 2 x i1> [[VP_MASK_NOT106]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT115:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT76]], <vscale x 2 x i1> [[VP_MASK_NOT107]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT116:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT77]], <vscale x 2 x i1> [[VP_MASK_NOT108]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT117:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT78]], <vscale x 2 x i1> [[VP_MASK_NOT109]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT118:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT79]], <vscale x 2 x i1> [[VP_MASK_NOT110]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_OP_LOAD119:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP93]], <vscale x 2 x i1> [[VP_MASK_SELECT111]], i32 [[TMP35]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP165:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP166:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP165]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD120:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP166]], <vscale x 2 x i1> [[VP_MASK_SELECT112]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP167:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP168:%.*]] = sext i32 [[TMP167]] to i64
; INTERLEAVE-NEXT:    [[TMP169:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP168]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD121:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP169]], <vscale x 2 x i1> [[VP_MASK_SELECT113]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP170:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP171:%.*]] = add i32 [[TMP170]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP172:%.*]] = sext i32 [[TMP171]] to i64
; INTERLEAVE-NEXT:    [[TMP173:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP172]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD122:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP173]], <vscale x 2 x i1> [[VP_MASK_SELECT114]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP174:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP175:%.*]] = add i32 [[TMP174]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP176:%.*]] = add i32 [[TMP175]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP177:%.*]] = sext i32 [[TMP176]] to i64
; INTERLEAVE-NEXT:    [[TMP178:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP177]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD123:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP178]], <vscale x 2 x i1> [[VP_MASK_SELECT115]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP179:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP180:%.*]] = add i32 [[TMP179]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP181:%.*]] = add i32 [[TMP180]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP182:%.*]] = add i32 [[TMP181]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP183:%.*]] = sext i32 [[TMP182]] to i64
; INTERLEAVE-NEXT:    [[TMP184:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP183]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD124:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP184]], <vscale x 2 x i1> [[VP_MASK_SELECT116]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP185:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP186:%.*]] = add i32 [[TMP185]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP187:%.*]] = add i32 [[TMP186]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP188:%.*]] = add i32 [[TMP187]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP189:%.*]] = add i32 [[TMP188]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP190:%.*]] = sext i32 [[TMP189]] to i64
; INTERLEAVE-NEXT:    [[TMP191:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP190]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD125:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP191]], <vscale x 2 x i1> [[VP_MASK_SELECT117]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP192:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP193:%.*]] = add i32 [[TMP192]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP194:%.*]] = add i32 [[TMP193]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP195:%.*]] = add i32 [[TMP194]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP196:%.*]] = add i32 [[TMP195]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP197:%.*]] = add i32 [[TMP196]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP198:%.*]] = sext i32 [[TMP197]] to i64
; INTERLEAVE-NEXT:    [[TMP199:%.*]] = getelementptr inbounds double, ptr [[TMP93]], i64 [[TMP198]]
; INTERLEAVE-NEXT:    [[VP_OP_LOAD126:%.*]] = tail call <vscale x 2 x double> @llvm.vp.load.nxv2f64.p0(ptr [[TMP199]], <vscale x 2 x i1> [[VP_MASK_SELECT118]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[VP_OP127:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD119]], <vscale x 2 x double> [[VP_OP_LOAD119]], <vscale x 2 x i1> [[VP_MASK_SELECT111]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_OP128:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD120]], <vscale x 2 x double> [[VP_OP_LOAD120]], <vscale x 2 x i1> [[VP_MASK_SELECT112]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_OP129:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD121]], <vscale x 2 x double> [[VP_OP_LOAD121]], <vscale x 2 x i1> [[VP_MASK_SELECT113]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_OP130:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD122]], <vscale x 2 x double> [[VP_OP_LOAD122]], <vscale x 2 x i1> [[VP_MASK_SELECT114]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_OP131:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD123]], <vscale x 2 x double> [[VP_OP_LOAD123]], <vscale x 2 x i1> [[VP_MASK_SELECT115]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_OP132:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD124]], <vscale x 2 x double> [[VP_OP_LOAD124]], <vscale x 2 x i1> [[VP_MASK_SELECT116]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_OP133:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD125]], <vscale x 2 x double> [[VP_OP_LOAD125]], <vscale x 2 x i1> [[VP_MASK_SELECT117]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_OP134:%.*]] = tail call <vscale x 2 x double> @llvm.vp.fadd.nxv2f64(<vscale x 2 x double> [[VP_OP_LOAD126]], <vscale x 2 x double> [[VP_OP_LOAD126]], <vscale x 2 x i1> [[VP_MASK_SELECT118]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT135:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT72]], <vscale x 2 x i1> [[VP_OP_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT136:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT73]], <vscale x 2 x i1> [[VP_OP_SELECT90]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT137:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT74]], <vscale x 2 x i1> [[VP_OP_SELECT92]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT138:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT75]], <vscale x 2 x i1> [[VP_OP_SELECT94]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT139:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT76]], <vscale x 2 x i1> [[VP_OP_SELECT96]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT140:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT77]], <vscale x 2 x i1> [[VP_OP_SELECT98]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT141:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT78]], <vscale x 2 x i1> [[VP_OP_SELECT100]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_SELECT142:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.and.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT79]], <vscale x 2 x i1> [[VP_OP_SELECT102]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT111]], <vscale x 2 x double> [[VP_OP127]], <vscale x 2 x double> [[VP_OP]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI143:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT112]], <vscale x 2 x double> [[VP_OP128]], <vscale x 2 x double> [[VP_OP65]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI144:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT113]], <vscale x 2 x double> [[VP_OP129]], <vscale x 2 x double> [[VP_OP66]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI145:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT114]], <vscale x 2 x double> [[VP_OP130]], <vscale x 2 x double> [[VP_OP67]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI146:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT115]], <vscale x 2 x double> [[VP_OP131]], <vscale x 2 x double> [[VP_OP68]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI147:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT116]], <vscale x 2 x double> [[VP_OP132]], <vscale x 2 x double> [[VP_OP69]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI148:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT117]], <vscale x 2 x double> [[VP_OP133]], <vscale x 2 x double> [[VP_OP70]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI149:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT118]], <vscale x 2 x double> [[VP_OP134]], <vscale x 2 x double> [[VP_OP71]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI150:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT135]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI]], i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI151:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT136]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI143]], i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI152:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT137]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI144]], i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI153:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT138]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI145]], i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI154:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT139]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI146]], i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI155:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT140]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI147]], i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI156:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT141]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI148]], i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_PREDPHI157:%.*]] = tail call <vscale x 2 x double> @llvm.vp.select.nxv2f64(<vscale x 2 x i1> [[VP_MASK_SELECT142]], <vscale x 2 x double> shufflevector (<vscale x 2 x double> insertelement (<vscale x 2 x double> poison, double 3.000000e+00, i64 0), <vscale x 2 x double> poison, <vscale x 2 x i32> zeroinitializer), <vscale x 2 x double> [[VP_PREDPHI149]], i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[TMP200:%.*]] = getelementptr inbounds double, ptr [[A:%.*]], i64 [[INDEX]]
; INTERLEAVE-NEXT:    [[VP_MASK_OR:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT111]], <vscale x 2 x i1> [[VP_MASK_SELECT135]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR158:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT112]], <vscale x 2 x i1> [[VP_MASK_SELECT136]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR159:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT113]], <vscale x 2 x i1> [[VP_MASK_SELECT137]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR160:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT114]], <vscale x 2 x i1> [[VP_MASK_SELECT138]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR161:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT115]], <vscale x 2 x i1> [[VP_MASK_SELECT139]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR162:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT116]], <vscale x 2 x i1> [[VP_MASK_SELECT140]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR163:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT117]], <vscale x 2 x i1> [[VP_MASK_SELECT141]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR164:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_SELECT118]], <vscale x 2 x i1> [[VP_MASK_SELECT142]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR165:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR]], <vscale x 2 x i1> [[VP_MASK_SELECT]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP35]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR166:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR158]], <vscale x 2 x i1> [[VP_MASK_SELECT50]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP38]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR167:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR159]], <vscale x 2 x i1> [[VP_MASK_SELECT51]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP41]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR168:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR160]], <vscale x 2 x i1> [[VP_MASK_SELECT52]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP44]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR169:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR161]], <vscale x 2 x i1> [[VP_MASK_SELECT53]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP47]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR170:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR162]], <vscale x 2 x i1> [[VP_MASK_SELECT54]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP50]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR171:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR163]], <vscale x 2 x i1> [[VP_MASK_SELECT55]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP53]])
; INTERLEAVE-NEXT:    [[VP_MASK_OR172:%.*]] = tail call <vscale x 2 x i1> @llvm.vp.or.nxv2i1(<vscale x 2 x i1> [[VP_MASK_OR164]], <vscale x 2 x i1> [[VP_MASK_SELECT56]], <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> poison, i1 true, i64 0), <vscale x 2 x i1> poison, <vscale x 2 x i32> zeroinitializer), i32 [[TMP56]])
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI150]], ptr [[TMP200]], <vscale x 2 x i1> [[VP_MASK_OR165]], i32 [[TMP35]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP201:%.*]] = sext i32 [[TMP35]] to i64
; INTERLEAVE-NEXT:    [[TMP202:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP201]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI151]], ptr [[TMP202]], <vscale x 2 x i1> [[VP_MASK_OR166]], i32 [[TMP38]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP203:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP204:%.*]] = sext i32 [[TMP203]] to i64
; INTERLEAVE-NEXT:    [[TMP205:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP204]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI152]], ptr [[TMP205]], <vscale x 2 x i1> [[VP_MASK_OR167]], i32 [[TMP41]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP206:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP207:%.*]] = add i32 [[TMP206]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP208:%.*]] = sext i32 [[TMP207]] to i64
; INTERLEAVE-NEXT:    [[TMP209:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP208]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI153]], ptr [[TMP209]], <vscale x 2 x i1> [[VP_MASK_OR168]], i32 [[TMP44]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP210:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP211:%.*]] = add i32 [[TMP210]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP212:%.*]] = add i32 [[TMP211]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP213:%.*]] = sext i32 [[TMP212]] to i64
; INTERLEAVE-NEXT:    [[TMP214:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP213]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI154]], ptr [[TMP214]], <vscale x 2 x i1> [[VP_MASK_OR169]], i32 [[TMP47]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP215:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP216:%.*]] = add i32 [[TMP215]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP217:%.*]] = add i32 [[TMP216]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP218:%.*]] = add i32 [[TMP217]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP219:%.*]] = sext i32 [[TMP218]] to i64
; INTERLEAVE-NEXT:    [[TMP220:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP219]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI155]], ptr [[TMP220]], <vscale x 2 x i1> [[VP_MASK_OR170]], i32 [[TMP50]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP221:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP222:%.*]] = add i32 [[TMP221]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP223:%.*]] = add i32 [[TMP222]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP224:%.*]] = add i32 [[TMP223]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP225:%.*]] = add i32 [[TMP224]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP226:%.*]] = sext i32 [[TMP225]] to i64
; INTERLEAVE-NEXT:    [[TMP227:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP226]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI156]], ptr [[TMP227]], <vscale x 2 x i1> [[VP_MASK_OR171]], i32 [[TMP53]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP228:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP229:%.*]] = add i32 [[TMP228]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP230:%.*]] = add i32 [[TMP229]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP231:%.*]] = add i32 [[TMP230]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP232:%.*]] = add i32 [[TMP231]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP233:%.*]] = add i32 [[TMP232]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP234:%.*]] = sext i32 [[TMP233]] to i64
; INTERLEAVE-NEXT:    [[TMP235:%.*]] = getelementptr inbounds double, ptr [[TMP200]], i64 [[TMP234]]
; INTERLEAVE-NEXT:    tail call void @llvm.vp.store.nxv2f64.p0(<vscale x 2 x double> [[VP_PREDPHI157]], ptr [[TMP235]], <vscale x 2 x i1> [[VP_MASK_OR172]], i32 [[TMP56]]), !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[TMP236:%.*]] = add i32 [[TMP35]], [[TMP38]]
; INTERLEAVE-NEXT:    [[TMP237:%.*]] = add i32 [[TMP236]], [[TMP41]]
; INTERLEAVE-NEXT:    [[TMP238:%.*]] = add i32 [[TMP237]], [[TMP44]]
; INTERLEAVE-NEXT:    [[TMP239:%.*]] = add i32 [[TMP238]], [[TMP47]]
; INTERLEAVE-NEXT:    [[TMP240:%.*]] = add i32 [[TMP239]], [[TMP50]]
; INTERLEAVE-NEXT:    [[TMP241:%.*]] = add i32 [[TMP240]], [[TMP53]]
; INTERLEAVE-NEXT:    [[TMP242:%.*]] = add i32 [[TMP241]], [[TMP56]]
; INTERLEAVE-NEXT:    [[TMP243:%.*]] = zext i32 [[TMP242]] to i64
; INTERLEAVE-NEXT:    [[INDEX_NEXT]] = add i64 [[INDEX]], [[TMP243]]
; INTERLEAVE-NEXT:    [[TMP244:%.*]] = icmp eq i64 [[INDEX_NEXT]], [[WIDE_TRIP_COUNT]]
; INTERLEAVE-NEXT:    br i1 [[TMP244]], label [[FOR_COND_CLEANUP]], label [[VECTOR_BODY]], !llvm.loop [[LOOP12:![0-9]+]]
; INTERLEAVE:       for.cond.cleanup:
; INTERLEAVE-NEXT:    ret void
; INTERLEAVE:       for.body:
; INTERLEAVE-NEXT:    [[INDVARS_IV:%.*]] = phi i64 [ [[INDVARS_IV_NEXT:%.*]], [[FOR_INC:%.*]] ], [ 0, [[FOR_BODY_PREHEADER]] ]
; INTERLEAVE-NEXT:    [[ARRAYIDX:%.*]] = getelementptr inbounds i32, ptr [[M]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP245:%.*]] = load i32, ptr [[ARRAYIDX]], align 4, !tbaa [[TBAA4]]
; INTERLEAVE-NEXT:    [[TOBOOL_NOT:%.*]] = icmp eq i32 [[TMP245]], 0
; INTERLEAVE-NEXT:    br i1 [[TOBOOL_NOT]], label [[IF_ELSE:%.*]], label [[IF_THEN:%.*]]
; INTERLEAVE:       if.then:
; INTERLEAVE-NEXT:    [[ARRAYIDX2:%.*]] = getelementptr inbounds double, ptr [[B]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP246:%.*]] = load double, ptr [[ARRAYIDX2]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[MUL:%.*]] = fmul double [[TMP246]], [[TMP246]]
; INTERLEAVE-NEXT:    br label [[FOR_INC]]
; INTERLEAVE:       if.else:
; INTERLEAVE-NEXT:    [[ARRAYIDX8:%.*]] = getelementptr inbounds ptr, ptr [[W]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP247:%.*]] = load ptr, ptr [[ARRAYIDX8]], align 8, !tbaa [[TBAA10]]
; INTERLEAVE-NEXT:    [[TOBOOL9_NOT:%.*]] = icmp eq ptr [[TMP247]], null
; INTERLEAVE-NEXT:    br i1 [[TOBOOL9_NOT]], label [[FOR_INC]], label [[IF_THEN10:%.*]]
; INTERLEAVE:       if.then10:
; INTERLEAVE-NEXT:    [[ARRAYIDX12:%.*]] = getelementptr inbounds double, ptr [[B]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    [[TMP248:%.*]] = load double, ptr [[ARRAYIDX12]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[ADD:%.*]] = fadd double [[TMP248]], [[TMP248]]
; INTERLEAVE-NEXT:    br label [[FOR_INC]]
; INTERLEAVE:       for.inc:
; INTERLEAVE-NEXT:    [[MUL_SINK:%.*]] = phi double [ [[MUL]], [[IF_THEN]] ], [ [[ADD]], [[IF_THEN10]] ], [ 3.000000e+00, [[IF_ELSE]] ]
; INTERLEAVE-NEXT:    [[ARRAYIDX6:%.*]] = getelementptr inbounds double, ptr [[A]], i64 [[INDVARS_IV]]
; INTERLEAVE-NEXT:    store double [[MUL_SINK]], ptr [[ARRAYIDX6]], align 8, !tbaa [[TBAA8]]
; INTERLEAVE-NEXT:    [[INDVARS_IV_NEXT]] = add nuw nsw i64 [[INDVARS_IV]], 1
; INTERLEAVE-NEXT:    [[EXITCOND_NOT:%.*]] = icmp eq i64 [[INDVARS_IV_NEXT]], [[WIDE_TRIP_COUNT]]
; INTERLEAVE-NEXT:    br i1 [[EXITCOND_NOT]], label [[FOR_COND_CLEANUP]], label [[FOR_BODY]], !llvm.loop [[LOOP16:![0-9]+]]
;
entry:
  %cmp37 = icmp sgt i32 %n, 0
  br i1 %cmp37, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %n to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.inc
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit, %entry
  ret void

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i32, i32* %m, i64 %indvars.iv
  %0 = load i32, i32* %arrayidx, align 4, !tbaa !4
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx2 = getelementptr inbounds double, double* %b, i64 %indvars.iv
  %1 = load double, double* %arrayidx2, align 8, !tbaa !8
  %mul = fmul double %1, %1
  br label %for.inc

if.else:                                          ; preds = %for.body
  %arrayidx8 = getelementptr inbounds i32*, i32** %w, i64 %indvars.iv
  %2 = load i32*, i32** %arrayidx8, align 8, !tbaa !10
  %tobool9.not = icmp eq i32* %2, null
  br i1 %tobool9.not, label %for.inc, label %if.then10

if.then10:                                        ; preds = %if.else
  %arrayidx12 = getelementptr inbounds double, double* %b, i64 %indvars.iv
  %3 = load double, double* %arrayidx12, align 8, !tbaa !8
  %add = fadd double %3, %3
  br label %for.inc

for.inc:                                          ; preds = %if.else, %if.then, %if.then10
  %mul.sink = phi double [ %mul, %if.then ], [ %add, %if.then10 ], [ 3.000000e+00, %if.else ]
  %arrayidx6 = getelementptr inbounds double, double* %a, i64 %indvars.iv
  store double %mul.sink, double* %arrayidx6, align 8, !tbaa !8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body, !llvm.loop !12
}

attributes #0 = { argmemonly nofree norecurse nosync nounwind "frame-pointer"="none" "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-features"="+64bit,+a,+c,+d,+f,+m,+zepi,+zve32f,+zve32x,+zve64d,+zve64f,+zve64x,+zvl32b,+zvl64b,-relax,-save-restore" }

!llvm.module.flags = !{!0, !1, !2}
!llvm.ident = !{!3}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 1, !"target-abi", !"lp64d"}
!2 = !{i32 1, !"SmallDataLimit", i32 8}
!3 = !{!"clang version 15.0.0"}
!4 = !{!5, !5, i64 0}
!5 = !{!"int", !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = !{!9, !9, i64 0}
!9 = !{!"double", !6, i64 0}
!10 = !{!11, !11, i64 0}
!11 = !{!"any pointer", !6, i64 0}
!12 = distinct !{!12, !13}
!13 = !{!"llvm.loop.mustprogress"}
