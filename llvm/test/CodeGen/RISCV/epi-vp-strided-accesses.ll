; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+v,+f -verify-machineinstrs \
; RUN:    < %s -epi-pipeline | FileCheck %s

define <vscale x 2 x float> @strided_load(float *%ptr, i64 %stride, <vscale x 2 x i1> %mask, i32 zeroext %evl)
; CHECK-LABEL: strided_load:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a2, e32, m1, ta, mu
; CHECK-NEXT:    vlse32.v v8, (a0), a1, v0.t
; CHECK-NEXT:    ret
{
  %v = call <vscale x 2 x float> @llvm.experimental.vp.strided.load.nxv2f32.p0f32.i64(float* %ptr, i64 %stride, <vscale x 2 x i1> %mask, i32 %evl)
  ret <vscale x 2 x float> %v
}

define <vscale x 2 x float> @strided_load_nomask(float *%ptr, i64 %stride, i32 zeroext %evl)
; CHECK-LABEL: strided_load_nomask:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a2, e32, m1, ta, ma
; CHECK-NEXT:    vlse32.v v8, (a0), a1
; CHECK-NEXT:    ret
{
  %insert = insertelement <vscale x 2 x i1> undef, i1 1, i32 0
  %allones = shufflevector <vscale x 2 x i1> %insert, <vscale x 2 x i1> undef, <vscale x 2 x i32> zeroinitializer
  %v = call <vscale x 2 x float> @llvm.experimental.vp.strided.load.nxv2f32.p0f32.i64(float* %ptr, i64 %stride, <vscale x 2 x i1> %allones, i32 %evl)
  ret <vscale x 2 x float> %v
}

declare <vscale x 2 x float> @llvm.experimental.vp.strided.load.nxv2f32.p0f32.i64(float* nocapture, i64, <vscale x 2 x i1>, i32)

define void @strided_store(<vscale x 2 x float> %v, float *%ptr, i64 %stride, <vscale x 2 x i1> %mask, i32 zeroext %evl)
; CHECK-LABEL: strided_store:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a2, e32, m1, ta, ma
; CHECK-NEXT:    vsse32.v v8, (a0), a1, v0.t
; CHECK-NEXT:    ret
{
  call void @llvm.experimental.vp.strided.store.nxv2f32.p0f32.i64(<vscale x 2 x float> %v, float* %ptr, i64 %stride, <vscale x 2 x i1> %mask, i32 %evl)
  ret void
}

define void @strided_store_nomask(<vscale x 2 x float> %v, float *%ptr, i64 %stride, i32 zeroext %evl)
; CHECK-LABEL: strided_store_nomask:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a2, e32, m1, ta, ma
; CHECK-NEXT:    vsse32.v v8, (a0), a1
; CHECK-NEXT:    ret
{
  %insert = insertelement <vscale x 2 x i1> undef, i1 1, i32 0
  %allones = shufflevector <vscale x 2 x i1> %insert, <vscale x 2 x i1> undef, <vscale x 2 x i32> zeroinitializer
  call void @llvm.experimental.vp.strided.store.nxv2f32.p0f32.i64(<vscale x 2 x float> %v, float* %ptr, i64 %stride, <vscale x 2 x i1> %allones, i32 %evl)
  ret void
}

declare void @llvm.experimental.vp.strided.store.nxv2f32.p0f32.i64(<vscale x 2 x float>, float* nocapture, i64, <vscale x 2 x i1>, i32)
