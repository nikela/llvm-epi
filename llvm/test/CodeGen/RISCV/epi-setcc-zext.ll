; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-v -verify-machineinstrs < %s \
; RUN:    -epi-pipeline | FileCheck %s

; NOTE: This test checks that a setcc followed by a zext doesn't get combined
; into a "zext_in_reg" with a wider setcc VT.
; Eg. avoid
; nxv1i64 zext (nxv1i1 setcc (...))
;
; being combined into:
; nxv1i64 and (nxv1i64 setcc (...), (1, 1, ...)
;
; aka
; nxv1i64 "zext_in_reg" (nxv1i64 setcc (...))

define <vscale x 1 x i64> @sext_i64(<vscale x 1 x i64> %a, <vscale x 1 x i64> %b)
; CHECK-LABEL: sext_i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e64, m1, ta, mu
; CHECK-NEXT:    vmsleu.vv v0, v8, v9
; CHECK-NEXT:    vmv.v.i v25, 0
; CHECK-NEXT:    vmerge.vim v8, v25, 1, v0
; CHECK-NEXT:    ret
{
  %cmp = icmp ule <vscale x 1 x i64> %a, %b
  %zext = zext <vscale x 1 x i1> %cmp to <vscale x 1 x i64>
  ret <vscale x 1 x i64> %zext
}
