; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-v -verify-machineinstrs < %s \
; RUN:    -epi-pipeline | FileCheck %s

define <vscale x 1 x i64> @nxv1i64(<vscale x 1 x i64> %a) nounwind {
; CHECK-LABEL: nxv1i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e64,m1,tu,mu
; CHECK-NEXT:    addi a0, a0, -1
; CHECK-NEXT:    vid.v v25
; CHECK-NEXT:    vrsub.vx v26, v25, a0
; CHECK-NEXT:    vrgather.vv v25, v16, v26
; CHECK-NEXT:    vmv1r.v v16, v25
; CHECK-NEXT:    ret
  %b = call <vscale x 1 x i64> @llvm.experimental.vector.reverse.nxv1i64(<vscale x 1 x i64> %a)
  ret <vscale x 1 x i64> %b
}

define <vscale x 2 x i32> @nxv2i32(<vscale x 2 x i32> %a) nounwind {
; CHECK-LABEL: nxv2i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e32,m1,tu,mu
; CHECK-NEXT:    addi a0, a0, -1
; CHECK-NEXT:    vid.v v25
; CHECK-NEXT:    vrsub.vx v26, v25, a0
; CHECK-NEXT:    vrgather.vv v25, v16, v26
; CHECK-NEXT:    vmv1r.v v16, v25
; CHECK-NEXT:    ret
  %b = call <vscale x 2 x i32> @llvm.experimental.vector.reverse.nxv2i32(<vscale x 2 x i32> %a)
  ret <vscale x 2 x i32> %b
}

define <vscale x 2 x i64> @nxv2i64(<vscale x 2 x i64> %a) nounwind {
; CHECK-LABEL: nxv2i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e64,m2,tu,mu
; CHECK-NEXT:    addi a0, a0, -1
; CHECK-NEXT:    vid.v v26
; CHECK-NEXT:    vrsub.vx v28, v26, a0
; CHECK-NEXT:    vrgather.vv v26, v16, v28
; CHECK-NEXT:    vmv2r.v v16, v26
; CHECK-NEXT:    ret
  %b = call <vscale x 2 x i64> @llvm.experimental.vector.reverse.nxv2i64(<vscale x 2 x i64> %a)
  ret <vscale x 2 x i64> %b
}

declare <vscale x 1 x i64> @llvm.experimental.vector.reverse.nxv1i64(<vscale x 1 x i64>)
declare <vscale x 2 x i32> @llvm.experimental.vector.reverse.nxv2i32(<vscale x 2 x i32>)
declare <vscale x 2 x i64> @llvm.experimental.vector.reverse.nxv2i64(<vscale x 2 x i64>)
