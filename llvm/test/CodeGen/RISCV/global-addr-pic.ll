; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple riscv32 -relocation-model=pic -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV32
; RUN: llc -mtriple riscv64 -relocation-model=pic -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV64

@local = internal global i32 42, align 4
@global = global i32 42, align 4

; Function Attrs: norecurse nounwind
define signext i32 @get_local() nounwind {
; RV32-LABEL: get_local:
; RV32:       # %bb.0: # %entry
; RV32-NEXT:  .Lpcrel_hi0:
; RV32-NEXT:    auipc a0, %pcrel_hi(local)
; RV32-NEXT:    lw a0, %pcrel_lo(.Lpcrel_hi0)(a0)
; RV32-NEXT:    ret
;
; RV64-LABEL: get_local:
; RV64:       # %bb.0: # %entry
; RV64-NEXT:  .Lpcrel_hi0:
; RV64-NEXT:    auipc a0, %pcrel_hi(local)
; RV64-NEXT:    lw a0, %pcrel_lo(.Lpcrel_hi0)(a0)
; RV64-NEXT:    ret
entry:
  %0 = load volatile i32, i32* @local, align 4
  ret i32 %0
}

define signext i32 @get_global() nounwind {
; RV32-LABEL: get_global:
; RV32:       # %bb.0: # %entry
; RV32-NEXT:  .Lpcrel_hi1:
; RV32-NEXT:    auipc a0, %got_pcrel_hi(global)
; RV32-NEXT:    lw a0, %pcrel_lo(.Lpcrel_hi1)(a0)
; RV32-NEXT:    lw a0, 0(a0)
; RV32-NEXT:    ret
;
; RV64-LABEL: get_global:
; RV64:       # %bb.0: # %entry
; RV64-NEXT:  .Lpcrel_hi1:
; RV64-NEXT:    auipc a0, %got_pcrel_hi(global)
; RV64-NEXT:    ld a0, %pcrel_lo(.Lpcrel_hi1)(a0)
; RV64-NEXT:    lw a0, 0(a0)
; RV64-NEXT:    ret
entry:
  %0 = load i32, i32* @global, align 4
  ret i32 %0
}
