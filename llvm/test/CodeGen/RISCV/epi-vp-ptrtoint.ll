; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+experimental-v -verify-machineinstrs \
; RUN:    < %s -epi-pipeline | FileCheck %s

define <vscale x 8 x i8> @test_llvm_vp_ptrtoint_v8i8_v8p0i8(<vscale x 8 x i8*> %ptrs, <vscale x 8 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v8i8_v8p0i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m4, ta, mu
; CHECK-NEXT:    vnsrl.wi v28, v8, 0, v0.t
; CHECK-NEXT:    vsetvli zero, zero, e16, m2, ta, mu
; CHECK-NEXT:    vnsrl.wi v26, v28, 0, v0.t
; CHECK-NEXT:    vsetvli zero, zero, e8, m1, ta, mu
; CHECK-NEXT:    vnsrl.wi v8, v26, 0, v0.t
; CHECK-NEXT:    ret
  %x = call <vscale x 8 x i8> @llvm.vp.ptrtoint.v8i8.v8p0i8(<vscale x 8 x i8*> %ptrs, <vscale x 8 x i1> %mask, i32 %evl)
  ret <vscale x 8 x i8> %x
}

define <vscale x 4 x i16> @test_llvm_vp_ptrtoint_v4i16_v4p0i16(<vscale x 4 x i16*> %ptrs, <vscale x 4 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v4i16_v4p0i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m2, ta, mu
; CHECK-NEXT:    vnsrl.wi v26, v8, 0, v0.t
; CHECK-NEXT:    vsetvli zero, zero, e16, m1, ta, mu
; CHECK-NEXT:    vnsrl.wi v8, v26, 0, v0.t
; CHECK-NEXT:    ret
  %x = call <vscale x 4 x i16> @llvm.vp.ptrtoint.v4i16.v4p0i16(<vscale x 4 x i16*> %ptrs, <vscale x 4 x i1> %mask, i32 %evl)
  ret <vscale x 4 x i16> %x
}

define <vscale x 2 x i32> @test_llvm_vp_ptrtoint_v2i32_v2p0i32(<vscale x 2 x i32*> %ptrs, <vscale x 2 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v2i32_v2p0i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m1, ta, mu
; CHECK-NEXT:    vnsrl.wi v25, v8, 0, v0.t
; CHECK-NEXT:    vmv1r.v v8, v25
; CHECK-NEXT:    ret
  %x = call <vscale x 2 x i32> @llvm.vp.ptrtoint.v2i32.v2p0i32(<vscale x 2 x i32*> %ptrs, <vscale x 2 x i1> %mask, i32 %evl)
  ret <vscale x 2 x i32> %x
}

define <vscale x 1 x i64> @test_llvm_vp_ptrtoint_v1i64_v1p0i64(<vscale x 1 x i64*> %ptrs, <vscale x 1 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v1i64_v1p0i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret
  %x = call <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i64(<vscale x 1 x i64*> %ptrs, <vscale x 1 x i1> %mask, i32 %evl)
  ret <vscale x 1 x i64> %x
}

define <vscale x 1 x i64> @test_llvm_vp_ptrtoint_v1i64_v1p0i32(<vscale x 1 x i32*> %ptrs, <vscale x 1 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v1i64_v1p0i32:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret
  %x = call <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i32(<vscale x 1 x i32*> %ptrs, <vscale x 1 x i1> %mask, i32 %evl)
  ret <vscale x 1 x i64> %x
}

define <vscale x 1 x i64> @test_llvm_vp_ptrtoint_v1i64_v1p0i16(<vscale x 1 x i16*> %ptrs, <vscale x 1 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v1i64_v1p0i16:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret
  %x = call <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i16(<vscale x 1 x i16*> %ptrs, <vscale x 1 x i1> %mask, i32 %evl)
  ret <vscale x 1 x i64> %x
}

define <vscale x 1 x i64> @test_llvm_vp_ptrtoint_v1i64_v1p0i8(<vscale x 1 x i8*> %ptrs, <vscale x 1 x i1> %mask, i32 zeroext %evl) {
; CHECK-LABEL: test_llvm_vp_ptrtoint_v1i64_v1p0i8:
; CHECK:       # %bb.0:
; CHECK-NEXT:    ret
  %x = call <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i8(<vscale x 1 x i8*> %ptrs, <vscale x 1 x i1> %mask, i32 %evl)
  ret <vscale x 1 x i64> %x
}

declare <vscale x 8 x i8> @llvm.vp.ptrtoint.v8i8.v8p0i8(<vscale x 8 x i8*>, <vscale x 8 x i1>, i32)
declare <vscale x 4 x i16> @llvm.vp.ptrtoint.v4i16.v4p0i16(<vscale x 4 x i16*>, <vscale x 4 x i1>, i32)
declare <vscale x 2 x i32> @llvm.vp.ptrtoint.v2i32.v2p0i32(<vscale x 2 x i32*>, <vscale x 2 x i1>, i32)
declare <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i64(<vscale x 1 x i64*>, <vscale x 1 x i1>, i32)
declare <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i32(<vscale x 1 x i32*>, <vscale x 1 x i1>, i32)
declare <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i16(<vscale x 1 x i16*>, <vscale x 1 x i1>, i32)
declare <vscale x 1 x i64> @llvm.vp.ptrtoint.v1i64.v1p0i8(<vscale x 1 x i8*>, <vscale x 1 x i1>, i32)
