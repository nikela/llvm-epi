; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+m,+f,+d,+c,+experimental-v < %s | \
; RUN:     FileCheck %s

define <vscale x 2 x i32> @trunc.i32.i64(<vscale x 2 x i64> %a, i32 %gvl)
; CHECK-LABEL: trunc.i32.i64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, a0, e32,m1,tu,mu
; CHECK-NEXT:    vnsrl.wx v1, v16, 0
; CHECK-NEXT:    vmv1r.v v16, v1
; CHECK-NEXT:    ret
{
  %b = call <vscale x 2 x i32> @llvm.vp.trunc.nxv2i32.nxv2i64(<vscale x 2 x i64> %a,
            <vscale x 2 x i1> shufflevector (<vscale x 2 x i1> insertelement (<vscale x 2 x i1> undef, i1 true, i32 0), <vscale x 2 x i1> undef, <vscale x 2 x i32> zeroinitializer),
            i32 %gvl)
  ret <vscale x 2 x i32> %b
}

define <vscale x 2 x i32> @trunc.i32.i64.mask(<vscale x 2 x i64> %a, <vscale x 2 x i1> %mask, i32 %gvl)
; CHECK-LABEL: trunc.i32.i64.mask:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, a0, e32,m1,tu,mu
; CHECK-NEXT:    vnsrl.wx v1, v16, 0, v0.t
; CHECK-NEXT:    vmv1r.v v16, v1
; CHECK-NEXT:    ret
{
  %b = call <vscale x 2 x i32> @llvm.vp.trunc.nxv2i32.nxv2i64(
               <vscale x 2 x i64> %a,
               <vscale x 2 x i1> %mask,
               i32 %gvl)
  ret <vscale x 2 x i32> %b
}

declare <vscale x 2 x i32> @llvm.vp.trunc.nxv2i32.nxv2i64(<vscale x 2 x i64>, <vscale x 2 x i1>, i32) #3
