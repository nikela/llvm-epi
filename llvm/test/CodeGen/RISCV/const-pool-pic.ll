; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple riscv32 -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV32-NOPIC
; RUN: llc -mtriple riscv64 -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV64-NOPIC
; RUN: llc -mtriple riscv32 -relocation-model=pic -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV32-PIC
; RUN: llc -mtriple riscv64 -relocation-model=pic -verify-machineinstrs < %s | FileCheck %s --check-prefix=RV64-PIC

@.str = private unnamed_addr constant [2 x i8] c"s\00", align 1

define void @test1() nounwind {
; RV32-NOPIC-LABEL: test1:
; RV32-NOPIC:       # %bb.0:
; RV32-NOPIC-NEXT:    lui a0, %hi(.L.str)
; RV32-NOPIC-NEXT:    addi a0, a0, %lo(.L.str)
; RV32-NOPIC-NEXT:    tail a@plt
;
; RV64-NOPIC-LABEL: test1:
; RV64-NOPIC:       # %bb.0:
; RV64-NOPIC-NEXT:    lui a0, %hi(.L.str)
; RV64-NOPIC-NEXT:    addi a0, a0, %lo(.L.str)
; RV64-NOPIC-NEXT:    tail a@plt
;
; RV32-PIC-LABEL: test1:
; RV32-PIC:       # %bb.0:
; RV32-PIC-NEXT:  .Lpcrel_hi0:
; RV32-PIC-NEXT:    auipc a0, %pcrel_hi(.L.str)
; RV32-PIC-NEXT:    addi a0, a0, %pcrel_lo(.Lpcrel_hi0)
; RV32-PIC-NEXT:    tail a@plt
;
; RV64-PIC-LABEL: test1:
; RV64-PIC:       # %bb.0:
; RV64-PIC-NEXT:  .Lpcrel_hi0:
; RV64-PIC-NEXT:    auipc a0, %pcrel_hi(.L.str)
; RV64-PIC-NEXT:    addi a0, a0, %pcrel_lo(.Lpcrel_hi0)
; RV64-PIC-NEXT:    tail a@plt
    tail call void @a(i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i32 0, i32 0)) #2
    ret void
}

declare void @a(i8*) nounwind
