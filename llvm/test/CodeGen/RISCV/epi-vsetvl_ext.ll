; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs -O0 \
; RUN:    < %s -epi-pipeline | FileCheck --check-prefix=CHECK-O0 %s
; RUN: llc -mtriple=riscv64 -mattr=+v -verify-machineinstrs -O2 \
; RUN:    < %s -epi-pipeline | FileCheck --check-prefix=CHECK-O2 %s

declare i64 @llvm.epi.vsetvl.ext(i64, i64, i64, i64);

define i64 @test_extra_is_zero(i64 %rvl) {
; CHECK-O0-LABEL: test_extra_is_zero:
; CHECK-O0:       # %bb.0:
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m1, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m1, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m1, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m1, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m2, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m2, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m2, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m2, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m4, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m4, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m4, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m4, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m8, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m8, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m8, ta, mu
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m8, ta, mu
; CHECK-O0-NEXT:    ret
;
; CHECK-O2-LABEL: test_extra_is_zero:
; CHECK-O2:       # %bb.0:
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m1, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m1, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m1, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m1, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m2, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m2, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m2, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m2, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m4, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m4, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m4, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m4, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m8, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m8, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m8, ta, mu
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m8, ta, mu
; CHECK-O2-NEXT:    ret

  ; LMUL = 1
  %gvl0 = call i64 @llvm.epi.vsetvl.ext(i64 %rvl, i64 0, i64 0, i64 0)
  %gvl1 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl0, i64 1, i64 0, i64 0)
  %gvl2 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl1, i64 2, i64 0, i64 0)
  %gvl3 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl2, i64 3, i64 0, i64 0)
  ; LMUL = 2
  %gvl4 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl3, i64 0, i64 1, i64 0)
  %gvl5 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl4, i64 1, i64 1, i64 0)
  %gvl6 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl5, i64 2, i64 1, i64 0)
  %gvl7 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl6, i64 3, i64 1, i64 0)
  ; LMUL = 4
  %gvl8 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl7, i64 0, i64 2, i64 0)
  %gvl9 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl8, i64 1, i64 2, i64 0)
  %gvl10 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl9, i64 2, i64 2, i64 0)
  %gvl11 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl10, i64 3, i64 2, i64 0)
  ; LMUL = 8
  %gvl12 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl11, i64 0, i64 3, i64 0)
  %gvl13 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl12, i64 1, i64 3, i64 0)
  %gvl14 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl13, i64 2, i64 3, i64 0)
  %gvl15 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl14, i64 3, i64 3, i64 0)

  ret i64 %gvl15
}

define i64 @test_extra_is_nt(i64 %rvl) {
; CHECK-O0-LABEL: test_extra_is_nt:
; CHECK-O0:       # %bb.0:
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m1, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m1, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m1, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m1, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m2, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m2, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m2, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m2, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m4, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m4, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m4, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m4, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e8, m8, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e16, m8, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e32, m8, ta, mu, nt
; CHECK-O0-NEXT:    vsetvli a0, a0, e64, m8, ta, mu, nt
; CHECK-O0-NEXT:    ret
;
; CHECK-O2-LABEL: test_extra_is_nt:
; CHECK-O2:       # %bb.0:
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m1, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m1, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m1, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m1, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m2, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m2, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m2, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m2, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m4, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m4, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m4, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m4, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e8, m8, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e16, m8, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e32, m8, ta, mu, nt
; CHECK-O2-NEXT:    vsetvli a0, a0, e64, m8, ta, mu, nt
; CHECK-O2-NEXT:    ret

  ; LMUL = 1
  %gvl0 = call i64 @llvm.epi.vsetvl.ext(i64 %rvl, i64 0, i64 0, i64 512)
  %gvl1 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl0, i64 1, i64 0, i64 512)
  %gvl2 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl1, i64 2, i64 0, i64 512)
  %gvl3 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl2, i64 3, i64 0, i64 512)
  ; LMUL = 2
  %gvl4 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl3, i64 0, i64 1, i64 512)
  %gvl5 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl4, i64 1, i64 1, i64 512)
  %gvl6 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl5, i64 2, i64 1, i64 512)
  %gvl7 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl6, i64 3, i64 1, i64 512)
  ; LMUL = 4
  %gvl8 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl7, i64 0, i64 2, i64 512)
  %gvl9 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl8, i64 1, i64 2, i64 512)
  %gvl10 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl9, i64 2, i64 2, i64 512)
  %gvl11 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl10, i64 3, i64 2, i64 512)
  ; LMUL = 8
  %gvl12 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl11, i64 0, i64 3, i64 512)
  %gvl13 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl12, i64 1, i64 3, i64 512)
  %gvl14 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl13, i64 2, i64 3, i64 512)
  %gvl15 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl14, i64 3, i64 3, i64 512)

  ret i64 %gvl15
}

define i64 @test_extra_is_other(i64 %rvl, i64 %extra) {
; CHECK-O0-LABEL: test_extra_is_other:
; CHECK-O0:       # %bb.0:
; CHECK-O0-NEXT:    mv a2, a1
; CHECK-O0-NEXT:    ori a1, a2, 64
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 72
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 80
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 88
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 65
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 73
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 81
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 89
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 66
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 74
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 82
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 90
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 67
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 75
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 83
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ori a1, a2, 91
; CHECK-O0-NEXT:    vsetvl a0, a0, a1
; CHECK-O0-NEXT:    ret
;
; CHECK-O2-LABEL: test_extra_is_other:
; CHECK-O2:       # %bb.0:
; CHECK-O2-NEXT:    ori a2, a1, 64
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 72
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 80
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 88
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 65
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 73
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 81
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 89
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 66
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 74
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 82
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 90
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 67
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 75
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 83
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ori a2, a1, 91
; CHECK-O2-NEXT:    vsetvl a0, a0, a2
; CHECK-O2-NEXT:    ret

  ; LMUL = 1
  %gvl0 = call i64 @llvm.epi.vsetvl.ext(i64 %rvl, i64 0, i64 0, i64 %extra)
  %gvl1 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl0, i64 1, i64 0, i64 %extra)
  %gvl2 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl1, i64 2, i64 0, i64 %extra)
  %gvl3 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl2, i64 3, i64 0, i64 %extra)
  ; LMUL = 2
  %gvl4 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl3, i64 0, i64 1, i64 %extra)
  %gvl5 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl4, i64 1, i64 1, i64 %extra)
  %gvl6 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl5, i64 2, i64 1, i64 %extra)
  %gvl7 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl6, i64 3, i64 1, i64 %extra)
  ; LMUL = 4
  %gvl8 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl7, i64 0, i64 2, i64 %extra)
  %gvl9 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl8, i64 1, i64 2, i64 %extra)
  %gvl10 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl9, i64 2, i64 2, i64 %extra)
  %gvl11 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl10, i64 3, i64 2, i64 %extra)
  ; LMUL = 8
  %gvl12 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl11, i64 0, i64 3, i64 %extra)
  %gvl13 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl12, i64 1, i64 3, i64 %extra)
  %gvl14 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl13, i64 2, i64 3, i64 %extra)
  %gvl15 = call i64 @llvm.epi.vsetvl.ext(i64 %gvl14, i64 3, i64 3, i64 %extra)

  ret i64 %gvl15
}
