; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+f,+d,+experimental-v -verify-machineinstrs < %s | FileCheck %s

declare <vscale x 2 x double> @llvm.epi.vfwredosum.nxv2f64(<vscale x 2 x float> %a, <vscale x 2 x double> %b, i64 %evl)
declare <vscale x 4 x double> @llvm.epi.vfwredosum.nxv4f64(<vscale x 4 x float> %a, <vscale x 4 x double> %b, i64 %evl)
declare <vscale x 8 x double> @llvm.epi.vfwredosum.nxv8f64(<vscale x 8 x float> %a, <vscale x 8 x double> %b, i64 %evl)

declare <vscale x 2 x double> @llvm.epi.vfwredosum.mask.nxv2f64(<vscale x 2 x double> %merge, <vscale x 2 x float> %a, <vscale x 2 x double> %b, <vscale x 2 x i1> %mask, i64 %evl)
declare <vscale x 4 x double> @llvm.epi.vfwredosum.mask.nxv4f64(<vscale x 4 x double> %merge, <vscale x 4 x float> %a, <vscale x 4 x double> %b, <vscale x 4 x i1> %mask, i64 %evl)
declare <vscale x 8 x double> @llvm.epi.vfwredosum.mask.nxv8f64(<vscale x 8 x double> %merge, <vscale x 8 x float> %a, <vscale x 8 x double> %b, <vscale x 8 x i1> %mask, i64 %evl)

define <vscale x 2 x double> @test_llvm.epi.vfwredosum_nxv2f64(<vscale x 2 x float> %a, <vscale x 2 x double> %b, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum_nxv2f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m1, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v8, v10
; CHECK-NEXT:    ret
    %1 = call <vscale x 2 x double> @llvm.epi.vfwredosum.nxv2f64(<vscale x 2 x float> %a, <vscale x 2 x double> %b, i64 %evl)
    ret <vscale x 2 x double> %1
}

define <vscale x 4 x double> @test_llvm.epi.vfwredosum_nxv4f64(<vscale x 4 x float> %a, <vscale x 4 x double> %b, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum_nxv4f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m2, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v8, v12
; CHECK-NEXT:    ret
    %1 = call <vscale x 4 x double> @llvm.epi.vfwredosum.nxv4f64(<vscale x 4 x float> %a, <vscale x 4 x double> %b, i64 %evl)
    ret <vscale x 4 x double> %1
}

define <vscale x 8 x double> @test_llvm.epi.vfwredosum_nxv8f64(<vscale x 8 x float> %a, <vscale x 8 x double> %b, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum_nxv8f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m4, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v8, v16
; CHECK-NEXT:    ret
    %1 = call <vscale x 8 x double> @llvm.epi.vfwredosum.nxv8f64(<vscale x 8 x float> %a, <vscale x 8 x double> %b, i64 %evl)
    ret <vscale x 8 x double> %1
}

define <vscale x 2 x double> @test_llvm.epi.vfwredosum.mask_nxv2f64(<vscale x 2 x double> %merge, <vscale x 2 x float> %a, <vscale x 2 x double> %b, <vscale x 2 x i1> %mask, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum.mask_nxv2f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m1, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v10, v12, v0.t
; CHECK-NEXT:    ret
    %1 = call <vscale x 2 x double> @llvm.epi.vfwredosum.mask.nxv2f64(<vscale x 2 x double> %merge, <vscale x 2 x float> %a, <vscale x 2 x double> %b, <vscale x 2 x i1> %mask, i64 %evl)
    ret <vscale x 2 x double> %1
}

define <vscale x 4 x double> @test_llvm.epi.vfwredosum.mask_nxv4f64(<vscale x 4 x double> %merge, <vscale x 4 x float> %a, <vscale x 4 x double> %b, <vscale x 4 x i1> %mask, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum.mask_nxv4f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m2, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v12, v16, v0.t
; CHECK-NEXT:    ret
    %1 = call <vscale x 4 x double> @llvm.epi.vfwredosum.mask.nxv4f64(<vscale x 4 x double> %merge, <vscale x 4 x float> %a, <vscale x 4 x double> %b, <vscale x 4 x i1> %mask, i64 %evl)
    ret <vscale x 4 x double> %1
}

define <vscale x 8 x double> @test_llvm.epi.vfwredosum.mask_nxv8f64(<vscale x 8 x double> %merge, <vscale x 8 x float> %a, <vscale x 8 x double> %b, <vscale x 8 x i1> %mask, i64 %evl) {
; CHECK-LABEL: test_llvm.epi.vfwredosum.mask_nxv8f64:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vl8re64.v v24, (a0)
; CHECK-NEXT:    vsetvli zero, a1, e32, m4, ta, mu
; CHECK-NEXT:    vfwredosum.vs v8, v16, v24, v0.t
; CHECK-NEXT:    ret
    %1 = call <vscale x 8 x double> @llvm.epi.vfwredosum.mask.nxv8f64(<vscale x 8 x double> %merge, <vscale x 8 x float> %a, <vscale x 8 x double> %b, <vscale x 8 x i1> %mask, i64 %evl)
    ret <vscale x 8 x double> %1
}
