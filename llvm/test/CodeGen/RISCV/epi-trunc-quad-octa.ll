; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple riscv64 -mattr +experimental-v -o - %s \
; RUN:   -verify-machineinstrs -epi-pipeline | FileCheck %s

; 32 -> 8
define <vscale x 8 x i8> @test_trunc_i32_i8_m1(<vscale x 8 x i32> %a) nounwind
; CHECK-LABEL: test_trunc_i32_i8_m1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e16,m2,ta,mu
; CHECK-NEXT:    vnsrl.wi v26, v16, 0
; CHECK-NEXT:    vsetvli a0, zero, e8,m1,ta,mu
; CHECK-NEXT:    vnsrl.wi v16, v26, 0
; CHECK-NEXT:    ret
{
  %b = trunc <vscale x 8 x i32> %a to <vscale x 8 x i8>
  ret <vscale x 8 x i8> %b
}

; 64 -> 8
define <vscale x 8 x i8> @test_trunc_i64_i8_m1(<vscale x 8 x i64> %a) nounwind
; CHECK-LABEL: test_trunc_i64_i8_m1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e32,m4,ta,mu
; CHECK-NEXT:    vnsrl.wi v28, v16, 0
; CHECK-NEXT:    vsetvli a0, zero, e16,m2,ta,mu
; CHECK-NEXT:    vnsrl.wi v26, v28, 0
; CHECK-NEXT:    vsetvli a0, zero, e8,m1,ta,mu
; CHECK-NEXT:    vnsrl.wi v16, v26, 0
; CHECK-NEXT:    ret
{
  %b = trunc <vscale x 8 x i64> %a to <vscale x 8 x i8>
  ret <vscale x 8 x i8> %b
}

; 64 -> 16
define <vscale x 4 x i16> @test_trunc_i64_i16_m1(<vscale x 4 x i64> %a) nounwind
; CHECK-LABEL: test_trunc_i64_i16_m1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e32,m2,ta,mu
; CHECK-NEXT:    vnsrl.wi v26, v16, 0
; CHECK-NEXT:    vsetvli a0, zero, e16,m1,ta,mu
; CHECK-NEXT:    vnsrl.wi v16, v26, 0
; CHECK-NEXT:    ret
{
  %b = trunc <vscale x 4 x i64> %a to <vscale x 4 x i16>
  ret <vscale x 4 x i16> %b
}

define <vscale x 8 x i16> @test_trunc_i64_i16_m2(<vscale x 8 x i64> %a) nounwind
; CHECK-LABEL: test_trunc_i64_i16_m2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a0, zero, e32,m4,ta,mu
; CHECK-NEXT:    vnsrl.wi v28, v16, 0
; CHECK-NEXT:    vsetvli a0, zero, e16,m2,ta,mu
; CHECK-NEXT:    vnsrl.wi v16, v28, 0
; CHECK-NEXT:    ret
{
  %b = trunc <vscale x 8 x i64> %a to <vscale x 8 x i16>
  ret <vscale x 8 x i16> %b
}
