; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple riscv64 -mattr=+f,+d,+v -verify-machineinstrs < %s \
; RUN:    -epi-pipeline | FileCheck %s

define void @masked_load_f32_m1(<vscale x 2 x float>* %addr, <vscale x 2 x float> %value, <vscale x 2 x i1> %mask)
; CHECK-LABEL: masked_load_f32_m1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e32, m1, ta, mu
; CHECK-NEXT:    vse32.v v8, (a0), v0.t
; CHECK-NEXT:    ret
{
    call void @llvm.masked.store.nxv2f32.p0nxv2f32(<vscale x 2 x float> %value, <vscale x 2 x float>* %addr, i32 4, <vscale x 2 x i1> %mask)
    ret void
}
declare void @llvm.masked.store.nxv2f32.p0nxv2f32(<vscale x 2 x float> %value, <vscale x 2 x float>* %addr, i32 %align, <vscale x 2 x i1> %mask)

define void @masked_load_f64_m1(<vscale x 1 x double>* %addr, <vscale x 1 x double> %value, <vscale x 1 x i1> %mask)
; CHECK-LABEL: masked_load_f64_m1:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64, m1, ta, mu
; CHECK-NEXT:    vse64.v v8, (a0), v0.t
; CHECK-NEXT:    ret
{
    call void @llvm.masked.store.nxv1f64.p0nxv1f64(<vscale x 1 x double> %value, <vscale x 1 x double>* %addr, i32 8, <vscale x 1 x i1> %mask)
    ret void
}
declare void @llvm.masked.store.nxv1f64.p0nxv1f64(<vscale x 1 x double> %value, <vscale x 1 x double>* %addr, i32 %align, <vscale x 1 x i1> %mask)

define void @masked_load_f64_m2(<vscale x 2 x double>* %addr, <vscale x 2 x double> %value, <vscale x 2 x i1> %mask)
; CHECK-LABEL: masked_load_f64_m2:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli a1, zero, e64, m2, ta, mu
; CHECK-NEXT:    vse64.v v8, (a0), v0.t
; CHECK-NEXT:    ret
{
    call void @llvm.masked.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> %value, <vscale x 2 x double>* %addr, i32 8, <vscale x 2 x i1> %mask)
    ret void
}
declare void @llvm.masked.store.nxv2f64.p0nxv2f64(<vscale x 2 x double> %value, <vscale x 2 x double>* %addr, i32 %align, <vscale x 2 x i1> %mask)

