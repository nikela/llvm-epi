; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv32 -relocation-model=pic < %s \
; RUN:    | FileCheck --check-prefix=RV32 %s
; RUN: llc -mtriple=riscv64 -relocation-model=pic < %s \
; RUN:    | FileCheck --check-prefix=RV64 %s

@y = thread_local(initialexec) local_unnamed_addr global i32 42, align 4

define void @foo() nounwind {
; RV32-LABEL: foo:
; RV32:       # %bb.0: # %entry
; RV32-NEXT:  .LBB0_1: # %entry
; RV32-NEXT:    # Label of block must be emitted
; RV32-NEXT:    auipc a0, %tls_ie_pcrel_hi(y)
; RV32-NEXT:    lw a0, %pcrel_lo(.LBB0_1)(a0)
; RV32-NEXT:    add a0, a0, tp
; RV32-NEXT:    lw a1, 0(a0)
; RV32-NEXT:    addi a1, a1, 1
; RV32-NEXT:    sw a1, 0(a0)
; RV32-NEXT:    ret
;
; RV64-LABEL: foo:
; RV64:       # %bb.0: # %entry
; RV64-NEXT:  .LBB0_1: # %entry
; RV64-NEXT:    # Label of block must be emitted
; RV64-NEXT:    auipc a0, %tls_ie_pcrel_hi(y)
; RV64-NEXT:    ld a0, %pcrel_lo(.LBB0_1)(a0)
; RV64-NEXT:    add a0, a0, tp
; RV64-NEXT:    lw a1, 0(a0)
; RV64-NEXT:    addiw a1, a1, 1
; RV64-NEXT:    sw a1, 0(a0)
; RV64-NEXT:    ret
entry:
  %0 = load i32, i32* @y, align 4
  %inc = add nsw i32 %0, 1
  store i32 %inc, i32* @y, align 4
  ret void
}
