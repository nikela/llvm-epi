; NOTE: Assertions have been autogenerated by utils/update_llc_test_checks.py
; RUN: llc -mtriple=riscv64 -mattr=+f,+experimental-v -verify-machineinstrs \
; RUN: < %s -epi-pipeline | FileCheck %s

declare <vscale x 2 x i32> @llvm.vp.bitcast.nxv2i32.nxv2f32(<vscale x 2 x float>, <vscale x 2 x i1>, i32)
declare <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32>, <vscale x 2 x i32>, <vscale x 2 x i1>, i32)

define <vscale x 2 x i32> @test_vp_bitcast(<vscale x 2 x float> %a, <vscale x 2 x i32> %b, i32 zeroext %evl) {
; CHECK-LABEL: test_vp_bitcast:
; CHECK:       # %bb.0:
; CHECK-NEXT:    vsetvli zero, a0, e32, m1, ta, mu
; CHECK-NEXT:    vadd.vv v8, v8, v9
; CHECK-NEXT:    ret
	%m.first = insertelement <vscale x 2 x i1> undef, i1 1, i32 0
	%m.splat = shufflevector <vscale x 2 x i1> %m.first, <vscale x 2 x i1> undef, <vscale x 2 x i32> zeroinitializer
  %1 = call <vscale x 2 x i32> @llvm.vp.bitcast.nxv2i32.nxv2f32(<vscale x 2 x float> %a, <vscale x 2 x i1> %m.splat, i32 %evl)
  %2 = call <vscale x 2 x i32> @llvm.vp.add.nxv2i32(<vscale x 2 x i32> %1, <vscale x 2 x i32> %b, <vscale x 2 x i1> %m.splat, i32 %evl)
  ret <vscale x 2 x i32> %2
}
