//===-- OpenCLImageTypes.def - Metadata about BuiltinTypes ------*- C++ -*-===//
//
//                     The LLVM Compiler Infrastructure
//
// This file is distributed under the University of Illinois Open Source
// License. See LICENSE.TXT for details.
//
//===----------------------------------------------------------------------===//
//  This file extends builtin types database with EPI types.
//  Custom code should define the following macro
//    EPI_VECTOR_TYPE(Scale, Type)
//
//  Two types with the same Scale represent the same number of elements but
//  the physical size is determined by the size of Type * Scale.
//
//  Tuples of vector types are defined using
//    EPI_TUPLE_VECTOR_TYPE(Scale, Type, TupleSize)
//  where TupleSize is the number of components of EPI_VECTOR_TYPE(Scale, Type)
//  it has.

// TODO: Still missing subregister sizes like EPI_VECTOR_TYPE(1, f32)

// LMUL=1, ELEN=64
EPI_VECTOR_TYPE(1, f64)
EPI_VECTOR_TYPE(2, f32)
EPI_VECTOR_TYPE(4, f16)

EPI_VECTOR_TYPE(1, i64)
EPI_VECTOR_TYPE(2, i32)
EPI_VECTOR_TYPE(4, i16)
EPI_VECTOR_TYPE(8, i8)

// LMUL=2, ELEN=64
EPI_VECTOR_TYPE(2, f64)
EPI_VECTOR_TYPE(4, f32)
EPI_VECTOR_TYPE(8, f16)

EPI_VECTOR_TYPE(2, i64)
EPI_VECTOR_TYPE(4, i32)
EPI_VECTOR_TYPE(8, i16)
EPI_VECTOR_TYPE(16, i8)

// LMUL=4, ELEN=64
EPI_VECTOR_TYPE(4, f64)
EPI_VECTOR_TYPE(8, f32)
EPI_VECTOR_TYPE(16, f16)

EPI_VECTOR_TYPE(4, i64)
EPI_VECTOR_TYPE(8, i32)
EPI_VECTOR_TYPE(16, i16)
EPI_VECTOR_TYPE(32, i8)

// LMUL=8, ELEN=64
EPI_VECTOR_TYPE(8, f64)
EPI_VECTOR_TYPE(16, f32)
EPI_VECTOR_TYPE(32, f16)

EPI_VECTOR_TYPE(8, i64)
EPI_VECTOR_TYPE(16, i32)
EPI_VECTOR_TYPE(32, i16)
EPI_VECTOR_TYPE(64, i8)

// Masks
EPI_VECTOR_TYPE(1, i1)
EPI_VECTOR_TYPE(2, i1)
EPI_VECTOR_TYPE(4, i1)
EPI_VECTOR_TYPE(8, i1)
EPI_VECTOR_TYPE(16, i1)
EPI_VECTOR_TYPE(32, i1)
EPI_VECTOR_TYPE(64, i1)

// Tuples
EPI_TUPLE_VECTOR_TYPE(8, i8, 2)
EPI_TUPLE_VECTOR_TYPE(4, i16, 2)
EPI_TUPLE_VECTOR_TYPE(2, i32, 2)
EPI_TUPLE_VECTOR_TYPE(1, i64, 2)
EPI_TUPLE_VECTOR_TYPE(2, f32, 2)
EPI_TUPLE_VECTOR_TYPE(1, f64, 2)

EPI_TUPLE_VECTOR_TYPE(8, i8, 3)
EPI_TUPLE_VECTOR_TYPE(4, i16, 3)
EPI_TUPLE_VECTOR_TYPE(2, i32, 3)
EPI_TUPLE_VECTOR_TYPE(1, i64, 3)
EPI_TUPLE_VECTOR_TYPE(2, f32, 3)
EPI_TUPLE_VECTOR_TYPE(1, f64, 3)

EPI_TUPLE_VECTOR_TYPE(8, i8, 4)
EPI_TUPLE_VECTOR_TYPE(4, i16, 4)
EPI_TUPLE_VECTOR_TYPE(2, i32, 4)
EPI_TUPLE_VECTOR_TYPE(1, i64, 4)
EPI_TUPLE_VECTOR_TYPE(2, f32, 4)
EPI_TUPLE_VECTOR_TYPE(1, f64, 4)

EPI_TUPLE_VECTOR_TYPE(8, i8, 5)
EPI_TUPLE_VECTOR_TYPE(4, i16, 5)
EPI_TUPLE_VECTOR_TYPE(2, i32, 5)
EPI_TUPLE_VECTOR_TYPE(1, i64, 5)
EPI_TUPLE_VECTOR_TYPE(2, f32, 5)
EPI_TUPLE_VECTOR_TYPE(1, f64, 5)

EPI_TUPLE_VECTOR_TYPE(8, i8, 6)
EPI_TUPLE_VECTOR_TYPE(4, i16, 6)
EPI_TUPLE_VECTOR_TYPE(2, i32, 6)
EPI_TUPLE_VECTOR_TYPE(1, i64, 6)
EPI_TUPLE_VECTOR_TYPE(2, f32, 6)
EPI_TUPLE_VECTOR_TYPE(1, f64, 6)

EPI_TUPLE_VECTOR_TYPE(8, i8, 7)
EPI_TUPLE_VECTOR_TYPE(4, i16, 7)
EPI_TUPLE_VECTOR_TYPE(2, i32, 7)
EPI_TUPLE_VECTOR_TYPE(1, i64, 7)
EPI_TUPLE_VECTOR_TYPE(2, f32, 7)
EPI_TUPLE_VECTOR_TYPE(1, f64, 7)

EPI_TUPLE_VECTOR_TYPE(8, i8, 8)
EPI_TUPLE_VECTOR_TYPE(4, i16, 8)
EPI_TUPLE_VECTOR_TYPE(2, i32, 8)
EPI_TUPLE_VECTOR_TYPE(1, i64, 8)
EPI_TUPLE_VECTOR_TYPE(2, f32, 8)
EPI_TUPLE_VECTOR_TYPE(1, f64, 8)

#undef EPI_TUPLE_VECTOR_TYPE
#undef EPI_VECTOR_TYPE
